/* Configuration source file for non-secure client */
import com.sun.jini.config.KeyStores;
import com.sun.security.auth.callback.DialogCallbackHandler;
import java.net.SocketPermission;
import java.security.Permission;
import net.jini.discovery.LookupDiscovery;
import net.jini.lookup.ServiceDiscoveryManager;
import net.jini.security.BasicProxyPreparer;
import java.security.Permission;
import java.util.Collections;
import javax.security.auth.login.LoginContext;

com.tymeac.TymeacClient {

    /* JAAS login UN-COMMENT THIS TO USE SECURITY */
/*    loginContext = new LoginContext("com.tymeac.TymeacClient", */
       /* Use this for command line version */
       /* new TextCallbackHandler(); */

       /* Use a dialog box UN-COMMENT THIS FOR A CALLBACK HANDLER */
/*       new DialogCallbackHandler());  */

    /* Keystore for getting principals */
    private static users= 
      KeyStores.getKeyStore("file:config/tymeac.truststore", null); 

    private static clientUser = Collections.singleton(
  KeyStores.getX500Principal("tymeacclient", users));
    private static reggieUser = Collections.singleton(
  KeyStores.getX500Principal("tymeacreggie", users));
    private static serverUser = Collections.singleton(
  KeyStores.getX500Principal("tymeacserver", users));
  
   private groups = new String[] { "TymeacServer" };
    serviceDiscovery = new ServiceDiscoveryManager(
        new LookupDiscovery(groups, this), null, this);

}//end com.tymeac.TymeacClient 
