/* Configuration source file for activatable JRMP server */

import net.jini.discovery.LookupDiscovery;
import net.jini.jrmp.JrmpExporter;
import net.jini.activation.*;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import javax.security.auth.Subject;
import javax.security.auth.login.*;

com.tymeac.TymeacServer {
    
  /*  login   */
  loginContext = new LoginContext("com.tymeac.TymeacServer");
  
  /* Keystore for getting principals */
  private static users= 
    KeyStores.getKeyStore("file:config/tymeac.truststore", null); 

    private static clientUser = Collections.singleton(
      KeyStores.getX500Principal("tymeacclient", users));   
  
    private static serverUser = Collections.singleton(
      KeyStores.getX500Principal("tymeacserver", users)); 
  
    private static reggieUser = Collections.singleton(
      KeyStores.getX500Principal("tymeacreggie", users));
  
    private static phoenixUser = Collections.singleton(
      KeyStores.getX500Principal("tymeacphoenix", users));   
  
  /* Exporter for the server proxy */
  exporter = 
    new ActivationExporter(
      (ActivationID) $data,
      
    /* Use SSL transport */
    SslServerEndpoint.getInstance(0), 
    
    /* No constraints */              
     new BasicILFactory()); 
    
  /* Discovery Manager */
  private groups = new String[] { "TymeacServer" };
    discoveryManager = new LookupDiscovery(groups, this);         

} //end com.tymeac.TymeacServer
