package com.tymeac.client.jframe;

/* 
 * Copyright (c) 1998 - 2004 Cooperative Software Systems, Inc. 
 *
 * The contents of this file are subject to the Common Public License   
 * ("License"). You may not use this file except in compliance with
 * the License. A copy of the License is part of this distribution and
 * is also available at:
 * http://www.opensource.org/licenses/cpl.php
 */

import java.awt.*;
import javax.swing.*;
import com.tymeac.base.*;
/**
 * The Overall Usage display frame.
 */
public class TyOverall extends javax.swing.JFrame
{
  private static final long serialVersionUID = 1L;

  // Used by addNotify
  boolean frameSizeAdjusted = false;

  //{{DECLARE_CONTROLS
	javax.swing.JLabel ListLabel = new javax.swing.JLabel();
	javax.swing.JButton TopButton = new javax.swing.JButton();
	javax.swing.JButton BottomButton = new javax.swing.JButton();
	javax.swing.JLabel Msg = new javax.swing.JLabel();
	javax.swing.JList TopList = new javax.swing.JList();
	javax.swing.JScrollPane JScrollPane1 = new javax.swing.JScrollPane();
	javax.swing.JList BottomList = new javax.swing.JList();
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem Help = new javax.swing.JMenuItem();
	javax.swing.JMenuItem about = new javax.swing.JMenuItem();
	//}}

	TyOverallBean2 TyOverallBean21 = null;
	TymeacInterface Ti = null;

  class SymWindow extends java.awt.event.WindowAdapter
  {
    public void windowClosing(java.awt.event.WindowEvent event)
    {
      Object object = event.getSource();
      if (object == TyOverall.this)
        TyOverall_windowClosing(event);
    }
  }

  class SymAction implements java.awt.event.ActionListener
  {
    public void actionPerformed(java.awt.event.ActionEvent event)
    { 
      Object object = event.getSource();
      if (object == exitItem)
        exitItem_actionPerformed(event);
      else if (object == Help)
        Help_actionPerformed(event);
      else  if (object == about)
        about_actionPerformed(event);
			else if (object == TopButton)
				TopButton_actionPerformed(event);
			else if (object == BottomButton)
				BottomButton_actionPerformed(event);          
      
    }
  }

	static java.util.ResourceBundle tyOverallBundle = java.util.ResourceBundle.getBundle("com.tymeac.client.jframe.TyOverallBundle");
  public TyOverall()
  {
    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.
    //{{INIT_CONTROLS
    setJMenuBar(JMenuBar1);
    setTitle(tyOverallBundle.getString("TyOverall_title"));
    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    getContentPane().setLayout(null);
    setSize(610,400);
		setVisible(false);
		ListLabel.setText(tyOverallBundle.getString("ListLabel_text"));
		ListLabel.setToolTipText(tyOverallBundle.getString("ListLabel_toolTipText").length() != 0 ? tyOverallBundle.getString("ListLabel_toolTipText") : null);
		getContentPane().add(ListLabel);
		ListLabel.setBounds(36,135,348,24);
    //$$ JMenuBar1.move(144,444);
    fileMenu.setText(tyOverallBundle.getString("fileMenu_text"));
    fileMenu.setActionCommand(tyOverallBundle.getString("fileMenu_actionCommand"));
		fileMenu.setToolTipText(tyOverallBundle.getString("fileMenu_toolTipText").length() != 0 ? tyOverallBundle.getString("fileMenu_toolTipText") : null);
    fileMenu.setMnemonic((int)'F');
    JMenuBar1.add(fileMenu);
    
    fileMenu.add(JSeparator1);
    
    exitItem.setText(tyOverallBundle.getString("exitItem_text"));
    exitItem.setActionCommand(tyOverallBundle.getString("exitItem_actionCommand"));
		exitItem.setToolTipText(tyOverallBundle.getString("exitItem_toolTipText").length() != 0 ? tyOverallBundle.getString("exitItem_toolTipText") : null);
    exitItem.setMnemonic((int)'X');
    fileMenu.add(exitItem);
		JSeparator1.setToolTipText(tyOverallBundle.getString("JSeparator1_toolTipText").length() != 0 ? tyOverallBundle.getString("JSeparator1_toolTipText") : null);
    
    helpMenu.setText(tyOverallBundle.getString("helpMenu_text"));
    helpMenu.setActionCommand(tyOverallBundle.getString("helpMenu_actionCommand"));
		helpMenu.setToolTipText(tyOverallBundle.getString("helpMenu_toolTipText").length() != 0 ? tyOverallBundle.getString("helpMenu_toolTipText") : null);
    helpMenu.setMnemonic((int)'H');
    JMenuBar1.add(helpMenu);
    
    fileMenu.add(JSeparator1);
       
    Help.setText(tyOverallBundle.getString("Help_text"));
    Help.setActionCommand(tyOverallBundle.getString("Help_actionCommand"));
		Help.setToolTipText(tyOverallBundle.getString("Help_toolTipText").length() != 0 ? tyOverallBundle.getString("Help_toolTipText") : null);
    Help.setMnemonic((int)'D');
    helpMenu.add(Help);
    
    fileMenu.add(JSeparator1);
    
    about.setText(tyOverallBundle.getString("about_text"));
    about.setActionCommand(tyOverallBundle.getString("about_actionCommand"));
		about.setToolTipText(tyOverallBundle.getString("about_toolTipText").length() != 0 ? tyOverallBundle.getString("about_toolTipText") : null);
    about.setMnemonic((int)'A');
    helpMenu.add(about); 
		TopButton.setText(tyOverallBundle.getString("TopButton_text"));
		TopButton.setActionCommand(tyOverallBundle.getString("TopButton_actionCommand"));
		TopButton.setToolTipText(tyOverallBundle.getString("TopButton_toolTipText").length() != 0 ? tyOverallBundle.getString("TopButton_toolTipText") : null);
		getContentPane().add(TopButton);
		TopButton.setBounds(370,40,120,40);
		BottomButton.setText(tyOverallBundle.getString("BottomButton_text"));
		BottomButton.setActionCommand(tyOverallBundle.getString("BottomButton_actionCommand"));
		BottomButton.setToolTipText(tyOverallBundle.getString("BottomButton_toolTipText").length() != 0 ? tyOverallBundle.getString("BottomButton_toolTipText") : null);
		getContentPane().add(BottomButton);
		BottomButton.setBounds(470,160,120,40);
		Msg.setText(tyOverallBundle.getString("Msg_text"));
		Msg.setToolTipText(tyOverallBundle.getString("Msg_toolTipText").length() != 0 ? tyOverallBundle.getString("Msg_toolTipText") : null);
		getContentPane().add(Msg);
		Msg.setBackground(java.awt.Color.lightGray);
		Msg.setForeground(new java.awt.Color(128,0,0));
		Msg.setBounds(20,360,560,30);
		TopList.setSelectionBackground(new java.awt.Color(204,204,255));
		TopList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		TopList.setToolTipText(tyOverallBundle.getString("TopList_toolTipText").length() != 0 ? tyOverallBundle.getString("TopList_toolTipText") : null);
		TopList.setVisibleRowCount(3);
		getContentPane().add(TopList);
		TopList.setBounds(24,40,300,60);
		JScrollPane1.setOpaque(true);
		JScrollPane1.setToolTipText(tyOverallBundle.getString("JScrollPane1_toolTipText").length() != 0 ? tyOverallBundle.getString("JScrollPane1_toolTipText") : null);
		getContentPane().add(JScrollPane1);
		JScrollPane1.setBounds(24,160,396,180);
		BottomList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		BottomList.setToolTipText(tyOverallBundle.getString("BottomList_toolTipText").length() != 0 ? tyOverallBundle.getString("BottomList_toolTipText") : null);
		JScrollPane1.getViewport().add(BottomList);
		BottomList.setBounds(0,0,393,177);
		JMenuBar1.setToolTipText(tyOverallBundle.getString("JMenuBar1_toolTipText").length() != 0 ? tyOverallBundle.getString("JMenuBar1_toolTipText") : null);

    //}}

		Msg.setBorder(new javax.swing.border.EtchedBorder());

    //{{INIT_MENUS
    //}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    
    SymAction lSymAction = new SymAction();
    exitItem.addActionListener(lSymAction);
    Help.addActionListener(lSymAction);
    about.addActionListener(lSymAction);
		TopButton.addActionListener(lSymAction);
		BottomButton.addActionListener(lSymAction);
		//}}
  }
    public TyOverall(TymeacInterface TyI)
    {
			this();
    	Ti = TyI;

    	try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } 
      catch (Exception e) { 
      }		
    }
    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     */
  public TyOverall(String sTitle)
  {
    this();
    setTitle(sTitle);
  }
   void about_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    about_actionPerformed_Interaction1(event);
  }
  void about_actionPerformed_Interaction1(java.awt.event.ActionEvent event) { 
  
    try {
      // TymeacAbout Create with owner and show as modal
      {
        TyAbout TyAbout1 = new TyAbout(this);
        TyAbout1.setModal(true);
        TyAbout1.setVisible(true);
      }
    } catch (Exception e) {
    }
  }
    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
  public void addNotify()
  {
    // Record the size of the window prior to calling parents addNotify.
    Dimension size = getSize();
    
    super.addNotify();
    
    if (frameSizeAdjusted)
      return;
    frameSizeAdjusted = true;
    
    // Adjust size of frame according to the insets and menu bar
    javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
    int menuBarHeight = 0;
    if (menuBar != null)
        menuBarHeight = menuBar.getPreferredSize().height;
    Insets insets = getInsets();
    setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
  }
	void BottomButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		BottomButton_actionPerformed_Interaction1(event);
	}
	void BottomButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// when no obj
			if  (TyOverallBean21 == null) {
		
					// When internal
          if  (Ti != null) {

              // get the obj
              TyOverallBean21 = new TyOverallBean2(Ti);
          }
          else {
            // get the obj
            TyOverallBean21 = new TyOverallBean2();

          } // endif
			} // endif	
        
    // user code end
    TyOverallBean21.refreshBothButton(TopList, BottomList);
    // user code begin {2}
    
    // the result of this:
    switch (TyOverallBean21.getBothResult()) {
                  
        case 0: Msg.setText(tyOverallBundle.getString("case_0__Msg_text_1"));
                  break;                    
        
        case 1: Msg.setText(tyOverallBundle.getString("case_1__Msg_text_1"));
      
    } // end-switch
		} catch (java.lang.Exception e) {
		}
	}
  //{{DECLARE_MENUS
	//}}

  void exitApplication()
  {    
    this.setVisible(false);    // hide the Frame
    this.dispose();            // free the system resources
		if  (Ti == null) {
    		System.exit(0);   // close the application 
		} // endif    
  }
  void exitItem_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    exitItem_actionPerformed_Interaction1(event);
  }
  void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
  void Help_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    Help_actionPerformed_Interaction1(event);
  }
  void Help_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    
    TyHelp th = new TyHelp();

    th.putOut(tyOverallBundle.getString("th_putOut"));
    
  }
  /**
   * The entry point for this application.
   * Sets the Look and Feel to the System Look and Feel.
   * Creates a new JFrame1 and makes it visible.
   */
  static public void main(String args[])
  {
    try {
        // Add the following code if you want the Look and Feel
        // to be set to the Look and Feel of the native system.
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
        

      //Create a new instance of our application's frame, and make it visible.
      (new TyOverall()).setVisible(true);
    } 
    catch (Throwable t) {
      t.printStackTrace();
      //Ensure the application exits with an error condition.
      System.exit(1);
    }
  }
	void TopButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		TopButton_actionPerformed_Interaction1(event);
	}
	void TopButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// when no obj
			if  (TyOverallBean21 == null) {

					// When internal
          if  (Ti != null) {

              // get the obj
              TyOverallBean21 = new TyOverallBean2(Ti);
          }
          else {
            // get the obj
            TyOverallBean21 = new TyOverallBean2();

          } // endif
			} // endif	
        
    // user code end
    TyOverallBean21.refreshTopButton(TopList, BottomList);
    // user code begin {2}
    
    // the result of this:
    switch (TyOverallBean21.getTopResult()) {
                  
        case 0: Msg.setText(tyOverallBundle.getString("case_0__Msg_text"));
                  break;                    
        
        case 1: Msg.setText(tyOverallBundle.getString("case_1__Msg_text"));
      
    } // end-switch   

		} catch (java.lang.Exception e) {
		}
	}
  void TyOverall_windowClosing(java.awt.event.WindowEvent event)
  {
    // to do: code goes here.
       
    TyOverall_windowClosing_Interaction1(event);
  }
  void TyOverall_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
}
