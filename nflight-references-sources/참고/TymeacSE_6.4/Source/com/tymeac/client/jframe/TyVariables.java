package com.tymeac.client.jframe;

/* 
 * Copyright (c) 1998 - 2004 Cooperative Software Systems, Inc. 
 *
 * The contents of this file are subject to the Common Public License   
 * ("License"). You may not use this file except in compliance with
 * the License. A copy of the License is part of this distribution and
 * is also available at:
 * http://www.opensource.org/licenses/cpl.php
 */

import java.awt.*;
import javax.swing.*;

/**
 * The Tymeac Variables display frame.
 */
public class TyVariables extends javax.swing.JFrame
{
  private static final long serialVersionUID = 1L;

  // Used by addNotify
  boolean frameSizeAdjusted = false;

  //{{DECLARE_CONTROLS
	javax.swing.JTabbedPane TabbedPane = new javax.swing.JTabbedPane();
	javax.swing.JPanel BasicPanel = new javax.swing.JPanel();
	javax.swing.JTextField rmiURLText = new javax.swing.JTextField();
	javax.swing.JLabel RMIURLLabel = new javax.swing.JLabel();
	javax.swing.JTextField rmiAssocText = new javax.swing.JTextField();
	javax.swing.JLabel RMIAssocLabel = new javax.swing.JLabel();
	javax.swing.JButton ImportBasicButton = new javax.swing.JButton();
	javax.swing.JButton FinishBasicButton = new javax.swing.JButton();
	javax.swing.JLabel BasicMsg = new javax.swing.JLabel();
	javax.swing.JPanel IIOPPanel = new javax.swing.JPanel();
	javax.swing.JLabel iiopLabel = new javax.swing.JLabel();
	javax.swing.JTextField IIOPText = new javax.swing.JTextField();
	javax.swing.JButton ImportIIOPButton = new javax.swing.JButton();
	javax.swing.JButton FinishIIOPButton = new javax.swing.JButton();
	javax.swing.JLabel iiopMsg = new javax.swing.JLabel();
	javax.swing.JPanel AltPanel = new javax.swing.JPanel();
	javax.swing.JTextField AltText = new javax.swing.JTextField();
	javax.swing.JLabel AltLabel = new javax.swing.JLabel();
	javax.swing.JButton AltImportButton = new javax.swing.JButton();
	javax.swing.JButton AltFinishButton = new javax.swing.JButton();
	javax.swing.JLabel AltMsg = new javax.swing.JLabel();
	java.awt.FileDialog ReadJavaFile = new java.awt.FileDialog(this);
	java.awt.FileDialog WriteJavaFile = new java.awt.FileDialog(this);
	javax.swing.JScrollPane JScrollPane1 = new javax.swing.JScrollPane();
	javax.swing.JScrollPane JScrollPane2 = new javax.swing.JScrollPane();
	javax.swing.JScrollPane JScrollPane3 = new javax.swing.JScrollPane();
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem Help = new javax.swing.JMenuItem();
	javax.swing.JMenuItem about = new javax.swing.JMenuItem();
	//}}

  TyVariablesBean TyVariablesBean21 = new TyVariablesBean();

  
  class SymWindow extends java.awt.event.WindowAdapter
  {
    public void windowClosing(java.awt.event.WindowEvent event)
    {
      Object object = event.getSource();
      if (object == TyVariables.this)
        TyVariables_windowClosing(event);
    }
  }

  class SymAction implements java.awt.event.ActionListener
  {
    public void actionPerformed(java.awt.event.ActionEvent event)
    { 
      Object object = event.getSource();
      if (object == exitItem)
        exitItem_actionPerformed(event);
      else if (object == Help)
        Help_actionPerformed(event);
      else  if (object == about)
        about_actionPerformed(event);
      else if (object == ImportBasicButton)
        ImportBasicButton_actionPerformed(event);
      else if (object == FinishBasicButton)
        FinishBasicButton_actionPerformed(event);
			else if (object == ImportIIOPButton)
				ImportIIOPButton_actionPerformed(event);
			else if (object == FinishIIOPButton)
				FinishIIOPButton_actionPerformed(event);
			else if (object == AltImportButton)
				AltImportButton_actionPerformed(event);
			else if (object == AltFinishButton)
				AltFinishButton_actionPerformed(event);
      
    }
  }

  class SymListSelection implements javax.swing.event.ListSelectionListener
  {
    public void valueChanged(javax.swing.event.ListSelectionEvent event)
    {
      
    }
  }

	static java.util.ResourceBundle tyVariablesBundle = java.util.ResourceBundle.getBundle("com.tymeac.client.jframe.TyVariablesBundle");
  public TyVariables()
  {
    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.
    //{{INIT_CONTROLS
    setJMenuBar(JMenuBar1);
    setTitle(tyVariablesBundle.getString("TyVariables_title"));
    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    getContentPane().setLayout(null);
    setSize(570,355);
    setVisible(false);
		TabbedPane.setToolTipText(tyVariablesBundle.getString("TabbedPane_toolTipText").length() != 0 ? tyVariablesBundle.getString("TabbedPane_toolTipText") : null);
    getContentPane().add(TabbedPane);
    TabbedPane.setBounds(0,0,650,456);
		BasicPanel.setToolTipText(tyVariablesBundle.getString("BasicPanel_toolTipText").length() != 0 ? tyVariablesBundle.getString("BasicPanel_toolTipText") : null);
    BasicPanel.setLayout(null);
    TabbedPane.add(BasicPanel);
    BasicPanel.setBounds(2,27,645,426);
    BasicPanel.setVisible(false);
		rmiURLText.setText(tyVariablesBundle.getString("rmiURLText_text"));
    rmiURLText.setToolTipText(tyVariablesBundle.getString("rmiURLText_toolTipText").length() != 0 ? tyVariablesBundle.getString("rmiURLText_toolTipText") : null);
    BasicPanel.add(rmiURLText);
    rmiURLText.setBounds(46,57,456,30);
    RMIURLLabel.setText(tyVariablesBundle.getString("RMIURLLabel_text"));
		RMIURLLabel.setToolTipText(tyVariablesBundle.getString("RMIURLLabel_toolTipText").length() != 0 ? tyVariablesBundle.getString("RMIURLLabel_toolTipText") : null);
    BasicPanel.add(RMIURLLabel);
    RMIURLLabel.setBounds(46,81,36,24);
		rmiAssocText.setText(tyVariablesBundle.getString("rmiAssocText_text"));
    rmiAssocText.setToolTipText(tyVariablesBundle.getString("rmiAssocText_toolTipText").length() != 0 ? tyVariablesBundle.getString("rmiAssocText_toolTipText") : null);
    BasicPanel.add(rmiAssocText);
    rmiAssocText.setBounds(46,117,456,30);
    RMIAssocLabel.setText(tyVariablesBundle.getString("RMIAssocLabel_text"));
		RMIAssocLabel.setToolTipText(tyVariablesBundle.getString("RMIAssocLabel_toolTipText").length() != 0 ? tyVariablesBundle.getString("RMIAssocLabel_toolTipText") : null);
    BasicPanel.add(RMIAssocLabel);
    RMIAssocLabel.setBounds(46,141,120,36);
    ImportBasicButton.setText(tyVariablesBundle.getString("ImportBasicButton_text"));
    ImportBasicButton.setActionCommand(tyVariablesBundle.getString("ImportBasicButton_actionCommand"));
    ImportBasicButton.setToolTipText(tyVariablesBundle.getString("ImportBasicButton_toolTipText").length() != 0 ? tyVariablesBundle.getString("ImportBasicButton_toolTipText") : null);
    BasicPanel.add(ImportBasicButton);
    ImportBasicButton.setBounds(130,213,84,36);
    FinishBasicButton.setText(tyVariablesBundle.getString("FinishBasicButton_text"));
    FinishBasicButton.setActionCommand(tyVariablesBundle.getString("FinishBasicButton_actionCommand"));
    FinishBasicButton.setToolTipText(tyVariablesBundle.getString("FinishBasicButton_toolTipText").length() != 0 ? tyVariablesBundle.getString("FinishBasicButton_toolTipText") : null);
    BasicPanel.add(FinishBasicButton);
    FinishBasicButton.setBounds(334,213,84,36);
		BasicMsg.setText(tyVariablesBundle.getString("BasicMsg_text"));
		BasicMsg.setToolTipText(tyVariablesBundle.getString("BasicMsg_toolTipText").length() != 0 ? tyVariablesBundle.getString("BasicMsg_toolTipText") : null);
		BasicPanel.add(BasicMsg);
		BasicMsg.setForeground(new java.awt.Color(128,0,0));
		BasicMsg.setBounds(46,273,444,30);
		IIOPPanel.setToolTipText(tyVariablesBundle.getString("IIOPPanel_toolTipText").length() != 0 ? tyVariablesBundle.getString("IIOPPanel_toolTipText") : null);
    IIOPPanel.setLayout(null);
    TabbedPane.add(IIOPPanel);
    IIOPPanel.setBounds(2,27,645,426);
    IIOPPanel.setVisible(false);
    iiopLabel.setText(tyVariablesBundle.getString("iiopLabel_text"));
		iiopLabel.setToolTipText(tyVariablesBundle.getString("iiopLabel_toolTipText").length() != 0 ? tyVariablesBundle.getString("iiopLabel_toolTipText") : null);
    IIOPPanel.add(iiopLabel);
    iiopLabel.setBounds(46,81,120,24);
		IIOPText.setText(tyVariablesBundle.getString("IIOPText_text"));
		IIOPText.setToolTipText(tyVariablesBundle.getString("IIOPText_toolTipText").length() != 0 ? tyVariablesBundle.getString("IIOPText_toolTipText") : null);
    IIOPPanel.add(IIOPText);
    IIOPText.setBounds(46,57,456,30);
		ImportIIOPButton.setText(tyVariablesBundle.getString("ImportIIOPButton_text"));
		ImportIIOPButton.setActionCommand(tyVariablesBundle.getString("ImportIIOPButton_actionCommand"));
		ImportIIOPButton.setToolTipText(tyVariablesBundle.getString("ImportIIOPButton_toolTipText").length() != 0 ? tyVariablesBundle.getString("ImportIIOPButton_toolTipText") : null);
		IIOPPanel.add(ImportIIOPButton);
		ImportIIOPButton.setBounds(130,213,84,36);
		FinishIIOPButton.setText(tyVariablesBundle.getString("FinishIIOPButton_text"));
		FinishIIOPButton.setActionCommand(tyVariablesBundle.getString("FinishIIOPButton_actionCommand"));
		FinishIIOPButton.setToolTipText(tyVariablesBundle.getString("FinishIIOPButton_toolTipText").length() != 0 ? tyVariablesBundle.getString("FinishIIOPButton_toolTipText") : null);
		IIOPPanel.add(FinishIIOPButton);
		FinishIIOPButton.setBounds(334,213,84,36);
		iiopMsg.setText(tyVariablesBundle.getString("iiopMsg_text"));
		iiopMsg.setToolTipText(tyVariablesBundle.getString("iiopMsg_toolTipText").length() != 0 ? tyVariablesBundle.getString("iiopMsg_toolTipText") : null);
		IIOPPanel.add(iiopMsg);
		iiopMsg.setBackground(java.awt.Color.white);
		iiopMsg.setForeground(new java.awt.Color(128,0,0));
		iiopMsg.setBounds(46,273,420,30);
		AltPanel.setToolTipText(tyVariablesBundle.getString("AltPanel_toolTipText").length() != 0 ? tyVariablesBundle.getString("AltPanel_toolTipText") : null);
    AltPanel.setLayout(null);
    TabbedPane.add(AltPanel);
    AltPanel.setFont(new Font("Dialog", Font.PLAIN, 12));
    AltPanel.setBounds(2,27,645,426);
    AltPanel.setVisible(false);
		AltText.setText(tyVariablesBundle.getString("AltText_text"));
		AltText.setToolTipText(tyVariablesBundle.getString("AltText_toolTipText").length() != 0 ? tyVariablesBundle.getString("AltText_toolTipText") : null);
    AltPanel.add(AltText);
    AltText.setBounds(46,57,408,30);
    AltLabel.setText(tyVariablesBundle.getString("AltLabel_text"));
		AltLabel.setToolTipText(tyVariablesBundle.getString("AltLabel_toolTipText").length() != 0 ? tyVariablesBundle.getString("AltLabel_toolTipText") : null);
    AltPanel.add(AltLabel);
    AltLabel.setBounds(46,81,132,30);
		AltImportButton.setText(tyVariablesBundle.getString("AltImportButton_text"));
		AltImportButton.setActionCommand(tyVariablesBundle.getString("AltImportButton_actionCommand"));
		AltImportButton.setToolTipText(tyVariablesBundle.getString("AltImportButton_toolTipText").length() != 0 ? tyVariablesBundle.getString("AltImportButton_toolTipText") : null);
		AltPanel.add(AltImportButton);
		AltImportButton.setBounds(130,213,84,36);
		AltFinishButton.setText(tyVariablesBundle.getString("AltFinishButton_text"));
		AltFinishButton.setActionCommand(tyVariablesBundle.getString("AltFinishButton_actionCommand"));
		AltFinishButton.setToolTipText(tyVariablesBundle.getString("AltFinishButton_toolTipText").length() != 0 ? tyVariablesBundle.getString("AltFinishButton_toolTipText") : null);
		AltPanel.add(AltFinishButton);
		AltFinishButton.setBounds(334,213,84,36);
		AltMsg.setText(tyVariablesBundle.getString("AltMsg_text"));
		AltMsg.setToolTipText(tyVariablesBundle.getString("AltMsg_toolTipText").length() != 0 ? tyVariablesBundle.getString("AltMsg_toolTipText") : null);
		AltPanel.add(AltMsg);
		AltMsg.setBackground(java.awt.Color.white);
		AltMsg.setForeground(new java.awt.Color(128,0,0));
		AltMsg.setBounds(46,273,420,30);
    TabbedPane.setSelectedIndex(0);
    TabbedPane.setSelectedComponent(BasicPanel);
    TabbedPane.setTitleAt(0,tyVariablesBundle.getString("TabbedPane_titleAt0"));
    TabbedPane.setTitleAt(1,tyVariablesBundle.getString("TabbedPane_titleAt1"));
    TabbedPane.setTitleAt(2,tyVariablesBundle.getString("TabbedPane_titleAt2"));
    ReadJavaFile.setMode(FileDialog.LOAD);
    ReadJavaFile.setTitle(tyVariablesBundle.getString("ReadJavaFile_title"));
		ReadJavaFile.setDirectory(tyVariablesBundle.getString("ReadJavaFile_directory"));
    ReadJavaFile.setFile(tyVariablesBundle.getString("ReadJavaFile_file"));
    //$$ ReadJavaFile.move(0,421);
    //$$ ReadCfgFile.move(0,421);
    WriteJavaFile.setMode(FileDialog.SAVE);
    WriteJavaFile.setTitle(tyVariablesBundle.getString("WriteJavaFile_title"));
		WriteJavaFile.setDirectory(tyVariablesBundle.getString("WriteJavaFile_directory"));
    WriteJavaFile.setFile(tyVariablesBundle.getString("WriteJavaFile_file"));
    //$$ WriteJavaFile.move(24,421);
		JScrollPane1.setToolTipText(tyVariablesBundle.getString("JScrollPane1_toolTipText").length() != 0 ? tyVariablesBundle.getString("JScrollPane1_toolTipText") : null);
    //$$ WriteCfgFile.move(24,421);
    getContentPane().add(JScrollPane1);
    JScrollPane1.setBounds(119,33,155,60);
		JScrollPane2.setToolTipText(tyVariablesBundle.getString("JScrollPane2_toolTipText").length() != 0 ? tyVariablesBundle.getString("JScrollPane2_toolTipText") : null);
    getContentPane().add(JScrollPane2);
    JScrollPane2.setBounds(0,0,155,60);
		JScrollPane3.setToolTipText(tyVariablesBundle.getString("JScrollPane3_toolTipText").length() != 0 ? tyVariablesBundle.getString("JScrollPane3_toolTipText") : null);
    getContentPane().add(JScrollPane3);
    JScrollPane3.setBounds(0,0,155,60);
		JMenuBar1.setToolTipText(tyVariablesBundle.getString("JMenuBar1_toolTipText").length() != 0 ? tyVariablesBundle.getString("JMenuBar1_toolTipText") : null);
    //$$ JMenuBar1.move(156,432);
    fileMenu.setText(tyVariablesBundle.getString("fileMenu_text"));
    fileMenu.setActionCommand(tyVariablesBundle.getString("fileMenu_actionCommand"));
		fileMenu.setToolTipText(tyVariablesBundle.getString("fileMenu_toolTipText").length() != 0 ? tyVariablesBundle.getString("fileMenu_toolTipText") : null);
    fileMenu.setMnemonic((int)'F');
    JMenuBar1.add(fileMenu);
    exitItem.setText(tyVariablesBundle.getString("exitItem_text"));
    exitItem.setActionCommand(tyVariablesBundle.getString("exitItem_actionCommand"));
		exitItem.setToolTipText(tyVariablesBundle.getString("exitItem_toolTipText").length() != 0 ? tyVariablesBundle.getString("exitItem_toolTipText") : null);
    exitItem.setMnemonic((int)'X');
    fileMenu.add(exitItem);
		JSeparator1.setToolTipText(tyVariablesBundle.getString("JSeparator1_toolTipText").length() != 0 ? tyVariablesBundle.getString("JSeparator1_toolTipText") : null);
    fileMenu.add(JSeparator1);
    helpMenu.setText(tyVariablesBundle.getString("helpMenu_text"));
    helpMenu.setActionCommand(tyVariablesBundle.getString("helpMenu_actionCommand"));
		helpMenu.setToolTipText(tyVariablesBundle.getString("helpMenu_toolTipText").length() != 0 ? tyVariablesBundle.getString("helpMenu_toolTipText") : null);
    helpMenu.setMnemonic((int)'H');
    JMenuBar1.add(helpMenu);
    Help.setText(tyVariablesBundle.getString("Help_text"));
    Help.setActionCommand(tyVariablesBundle.getString("Help_actionCommand"));
		Help.setToolTipText(tyVariablesBundle.getString("Help_toolTipText").length() != 0 ? tyVariablesBundle.getString("Help_toolTipText") : null);
    Help.setMnemonic((int)'D');
    helpMenu.add(Help);
    about.setText(tyVariablesBundle.getString("about_text"));
    about.setActionCommand(tyVariablesBundle.getString("about_actionCommand"));
		about.setToolTipText(tyVariablesBundle.getString("about_toolTipText").length() != 0 ? tyVariablesBundle.getString("about_toolTipText") : null);
    about.setMnemonic((int)'A');
    helpMenu.add(about);
    //}}
		
		BasicMsg.setBorder(new javax.swing.border.EtchedBorder());
		iiopMsg.setBorder(new javax.swing.border.EtchedBorder());
		AltMsg.setBorder(new javax.swing.border.EtchedBorder());

    //{{INIT_MENUSBasicMsg.setBorder(new javax.swing.border.EtchedBorder());
    //}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    
    SymAction lSymAction = new SymAction();
    exitItem.addActionListener(lSymAction);
    Help.addActionListener(lSymAction);
    about.addActionListener(lSymAction);
    ImportBasicButton.addActionListener(lSymAction);
    FinishBasicButton.addActionListener(lSymAction);
		ImportIIOPButton.addActionListener(lSymAction);
		FinishIIOPButton.addActionListener(lSymAction);
		AltImportButton.addActionListener(lSymAction);
		AltFinishButton.addActionListener(lSymAction);
    //}}
  }
    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     */
  public TyVariables(String sTitle)
  {
    this();
    setTitle(sTitle);
  }
   void about_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    about_actionPerformed_Interaction1(event);

  } // end-method
  void about_actionPerformed_Interaction1(java.awt.event.ActionEvent event) { 
  
    try {
      // TymeacAbout Create with owner and show as modal
      {
        TyAbout TyAbout1 = new TyAbout(this);
        TyAbout1.setModal(true);
        TyAbout1.setVisible(true);
      }
    } catch (Exception e) {
    }
  }
    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
  public void addNotify()
  {
    // Record the size of the window prior to calling parents addNotify.
    Dimension size = getSize();
    
    super.addNotify();
    
    if (frameSizeAdjusted)
      return;
    frameSizeAdjusted = true;
    
    // Adjust size of frame according to the insets and menu bar
    javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
    int menuBarHeight = 0;
    if (menuBar != null)
        menuBarHeight = menuBar.getPreferredSize().height;
    Insets insets = getInsets();
    setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
  }
	void AltFinishButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		AltFinishButton_actionPerformed_Interaction1(event);
			 
		AltFinishButton_actionPerformed_Interaction2(event);
	}
	void AltFinishButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// WriteJavaFile Show the FileDialog
			WriteJavaFile.setVisible(true);
		} catch (java.lang.Exception e) {
		}
	}
	void AltFinishButton_actionPerformed_Interaction2(java.awt.event.ActionEvent event)
	{
		String ty_dir = null;     

    try {
      ty_dir = WriteJavaFile.getDirectory();
    } 
    catch (java.lang.Exception e) {
    }

    if  (TyVariablesBean21 == null) {

        // get a new obj
        TyVariablesBean21 = new TyVariablesBean();

    } // endif

    
    TyVariablesBean21.finishAltButton( ty_dir,
																			 AltText); 
                                       
    // the result of this:
    switch (TyVariablesBean21.getAltResult()) {
                  
            case 0: AltMsg.setText(tyVariablesBundle.getString("case_0__AltMsg_text_1"));
                    break;                    
            
            case 1: AltMsg.setText(tyVariablesBundle.getString("case_1__AltMsg_text_1")); 
                    break;

						case 1001: AltMsg.setText(tyVariablesBundle.getString("case_1001__AltMsg_text")); 
                    break; 

						case 1002: AltMsg.setText(tyVariablesBundle.getString("case_1002__AltMsg_text")); 
                    break;

						case 1003: AltMsg.setText(tyVariablesBundle.getString("case_1003__AltMsg_text")); 
                    break;
                  
    } // end-switch 
	}
	void AltImportButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		AltImportButton_actionPerformed_Interaction1(event);
			 
		AltImportButton_actionPerformed_Interaction2(event);
	}
	void AltImportButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// ReadJavaFile Show the FileDialog
			ReadJavaFile.setVisible(true);
		} catch (java.lang.Exception e) {
		}
	}
	void AltImportButton_actionPerformed_Interaction2(java.awt.event.ActionEvent event)
	{
		String ty_dir = null;       

    try {
      ty_dir = ReadJavaFile.getDirectory();

    } // end-try 

    catch (java.lang.Exception e) {
    } // end-catch
  
    // when first
    if  (TyVariablesBean21 == null) {

        // get a new obj
        TyVariablesBean21 = new TyVariablesBean();

    } // endif

    // go get the data
    TyVariablesBean21.importAltButton( ty_dir,
																			 AltText);
                            
    // the result of this:
    switch (TyVariablesBean21.getAltResult()) {
                  
            case 0: AltMsg.setText(tyVariablesBundle.getString("case_0__AltMsg_text"));
                    break;                    
            
            case 1: AltMsg.setText(tyVariablesBundle.getString("case_1__AltMsg_text")); 
                    break;

						case 100: AltMsg.setText(tyVariablesBundle.getString("case_100__AltMsg_text")); 
                    break; 

						case 200: AltMsg.setText(tyVariablesBundle.getString("case_200__AltMsg_text")); 
                    break;

						case 300: AltMsg.setText(tyVariablesBundle.getString("case_300__AltMsg_text")); 
                    break;

						default: AltMsg.setText(tyVariablesBundle.getString("default__AltMsg_text")); 
                    break;     	                   
                  
    } // end-switch 
	}
  //{{DECLARE_MENUS
	//}}

  void exitApplication()
  {    
    this.setVisible(false);    // hide the Frame
    this.dispose();            // free the system resources
    System.exit(0);            // close the application 
    
  }
  void exitItem_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    exitItem_actionPerformed_Interaction1(event);
  }
  void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
  void FinishBasicButton_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    FinishBasicButton_actionPerformed_Interaction1(event);

    String ty_dir = null;     

    try {
      ty_dir = WriteJavaFile.getDirectory();
    } 
    catch (java.lang.Exception e) {
    }

    if  (TyVariablesBean21 == null) {

        // get a new obj
        TyVariablesBean21 = new TyVariablesBean();

    } // endif

    
    TyVariablesBean21.finishBasicButton( ty_dir,
                                         rmiURLText,
																			   rmiAssocText); 
                                       
    // the result of this:
    switch (TyVariablesBean21.getBasicResult()) {
                  
            case 0: BasicMsg.setText(tyVariablesBundle.getString("case_0__BasicMsg_text_1"));
                    break;                    
            
            case 1: BasicMsg.setText(tyVariablesBundle.getString("case_1__BasicMsg_text_1")); 
                    break;
        
            case 2: BasicMsg.setText(tyVariablesBundle.getString("case_2__BasicMsg_text")); 
                    break;

						case 1001: BasicMsg.setText(tyVariablesBundle.getString("case_1001__BasicMsg_text")); 
                    break; 

						case 1002: BasicMsg.setText(tyVariablesBundle.getString("case_1002__BasicMsg_text")); 
                    break;

						case 1003: BasicMsg.setText(tyVariablesBundle.getString("case_1003__BasicMsg_text")); 
                    break; 
                  
        } // end-switch                             
  }
  void FinishBasicButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
  {
    try {
      // WriteCfgFile Show the FileDialog
      WriteJavaFile.setVisible(true);
    } catch (java.lang.Exception e) {
    }
  }
	void FinishIIOPButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		FinishIIOPButton_actionPerformed_Interaction1(event);
			 
		FinishIIOPButton_actionPerformed_Interaction2(event);
	}
	void FinishIIOPButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// WriteJavaFile Show the FileDialog
			WriteJavaFile.setVisible(true);
		} catch (java.lang.Exception e) {
		}
	}
	void FinishIIOPButton_actionPerformed_Interaction2(java.awt.event.ActionEvent event)
	{
		String ty_dir = null;     

    try {
      ty_dir = WriteJavaFile.getDirectory();
    } 
    catch (java.lang.Exception e) {
    }

    if  (TyVariablesBean21 == null) {

        // get a new obj
        TyVariablesBean21 = new TyVariablesBean();

    } // endif

    
    TyVariablesBean21.finishIIOPButton( ty_dir,
																			 IIOPText); 
                                       
    // the result of this:
    switch (TyVariablesBean21.getIIOPResult()) {
                  
            case 0: iiopMsg.setText(tyVariablesBundle.getString("case_0__iiopMsg_text_1"));
                    break;                    
            
            case 1: iiopMsg.setText(tyVariablesBundle.getString("case_1__iiopMsg_text_1")); 
                    break;

						case 1001: iiopMsg.setText(tyVariablesBundle.getString("case_1001__iiopMsg_text")); 
                    break; 

						case 1002: iiopMsg.setText(tyVariablesBundle.getString("case_1002__iiopMsg_text")); 
                    break;

						case 1003: iiopMsg.setText(tyVariablesBundle.getString("case_1003__iiopMsg_text")); 
                    break;
                  
        } // end-switch 
	}
  void Help_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    Help_actionPerformed_Interaction1(event);
  }
  void Help_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    
    TyHelp th = new TyHelp();

    th.putOut(tyVariablesBundle.getString("th_putOut"));
    
  }
  void ImportBasicButton_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    ImportBasicButton_actionPerformed_Interaction1(event);    

    String ty_dir = null;       

    try {
      ty_dir = ReadJavaFile.getDirectory();

    } // end-try 

    catch (java.lang.Exception e) {
    } // end-catch
  
    // when first
    if  (TyVariablesBean21 == null) {

        // get a new obj
        TyVariablesBean21 = new TyVariablesBean();

    } // endif

    // go get the data
    TyVariablesBean21.importBasicButton( ty_dir,
                                       rmiURLText,
																			 rmiAssocText);
                            
    // the result of this:
    switch (TyVariablesBean21.getBasicResult()) {
                  
            case 0: BasicMsg.setText(tyVariablesBundle.getString("case_0__BasicMsg_text"));
                    break;                    
            
            case 1: BasicMsg.setText(tyVariablesBundle.getString("case_1__BasicMsg_text")); 
                    break;

						case 100: BasicMsg.setText(tyVariablesBundle.getString("case_100__BasicMsg_text")); 
                    break; 

						case 200: BasicMsg.setText(tyVariablesBundle.getString("case_200__BasicMsg_text")); 
                    break;

						case 300: BasicMsg.setText(tyVariablesBundle.getString("case_300__BasicMsg_text")); 
                    break;

						default: BasicMsg.setText(tyVariablesBundle.getString("default__BasicMsg_text")); 
                    break;                        
                  
    } // end-switch                 
  }
  void ImportBasicButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
  {
    try {
      // ReadCfgFile Show the FileDialog
      ReadJavaFile.setVisible(true);
    } catch (java.lang.Exception e) {
    }
  }
	void ImportIIOPButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		ImportIIOPButton_actionPerformed_Interaction1(event);
			 
		ImportIIOPButton_actionPerformed_Interaction2(event);
	}
	void ImportIIOPButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// ReadJavaFile Show the FileDialog
			ReadJavaFile.setVisible(true);
		} catch (java.lang.Exception e) {
		}
	}
	void ImportIIOPButton_actionPerformed_Interaction2(java.awt.event.ActionEvent event)
	{
		String ty_dir = null;       

    try {
      ty_dir = ReadJavaFile.getDirectory();

    } // end-try 

    catch (java.lang.Exception e) {
    } // end-catch
  
    // when first
    if  (TyVariablesBean21 == null) {

        // get a new obj
        TyVariablesBean21 = new TyVariablesBean();

    } // endif

    // go get the data
    TyVariablesBean21.importIIOPButton( ty_dir,
																			 IIOPText);
                            
    // the result of this:
    switch (TyVariablesBean21.getIIOPResult()) {
                  
            case 0: iiopMsg.setText(tyVariablesBundle.getString("case_0__iiopMsg_text"));
                    break;                    
            
            case 1: iiopMsg.setText(tyVariablesBundle.getString("case_1__iiopMsg_text")); 
                    break; 
				
						case 100: iiopMsg.setText(tyVariablesBundle.getString("case_100__iiopMsg_text")); 
                    break; 

						case 200: iiopMsg.setText(tyVariablesBundle.getString("case_200__iiopMsg_text")); 
                    break;

						case 300: iiopMsg.setText(tyVariablesBundle.getString("case_300__iiopMsg_text")); 
                    break;

						default: iiopMsg.setText(tyVariablesBundle.getString("default__iiopMsg_text")); 
                    break;                      
                  
    } // end-switch 
	}
  /**
   * The entry point for this application.
   * Sets the Look and Feel to the System Look and Feel.
   * Creates a new JFrame1 and makes it visible.
   */
  static public void main(String args[])
  {
    try {
        // Add the following code if you want the Look and Feel
        // to be set to the Look and Feel of the native system.
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
        

      //Create a new instance of our application's frame, and make it visible.
      (new TyVariables()).setVisible(true);
    } 
    catch (Throwable t) {

      System.out.println(t.getMessage());
      // t.printStackTrace();
      //Ensure the application exits with an error condition.
      System.exit(1);
    }
  }
  void TyVariables_windowClosing(java.awt.event.WindowEvent event)
  {
    // to do: code goes here.
       
    TyVariables_windowClosing_Interaction1(event);
  }
  void TyVariables_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
}
