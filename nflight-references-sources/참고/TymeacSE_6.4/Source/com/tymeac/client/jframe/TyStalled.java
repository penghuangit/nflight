package com.tymeac.client.jframe;

/* 
 * Copyright (c) 1998 - 2004 Cooperative Software Systems, Inc. 
 *
 * The contents of this file are subject to the Common Public License   
 * ("License"). You may not use this file except in compliance with
 * the License. A copy of the License is part of this distribution and
 * is also available at:
 * http://www.opensource.org/licenses/cpl.php
 */

import java.awt.*;
import javax.swing.*;
import com.tymeac.base.*;

/**
 * The Stalled Array display frame.
 */
public class TyStalled extends javax.swing.JFrame
{
  private static final long serialVersionUID = 1L;

  // Used by addNotify
  boolean frameSizeAdjusted = false;

  //{{DECLARE_CONTROLS
	javax.swing.JLabel Msg = new javax.swing.JLabel();
	javax.swing.JLabel StalledLabel = new javax.swing.JLabel();
	javax.swing.JLabel DetailLabel = new javax.swing.JLabel();
	javax.swing.JButton RefreshButton = new javax.swing.JButton();
	javax.swing.JButton ReSchdButton = new javax.swing.JButton();
	javax.swing.JButton PurgeButton = new javax.swing.JButton();
	javax.swing.JButton DetailButton = new javax.swing.JButton();
	javax.swing.JScrollPane StalledPane = new javax.swing.JScrollPane();
	javax.swing.JList StalledList = new javax.swing.JList();
	javax.swing.JScrollPane DetailPane = new javax.swing.JScrollPane();
	javax.swing.JList DetailList = new javax.swing.JList();
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem Help = new javax.swing.JMenuItem();
	javax.swing.JMenuItem about = new javax.swing.JMenuItem();
	//}}

	TyStalledBean2 TyStalledBean21 = null;
	TymeacInterface Ti = null;


  class SymWindow extends java.awt.event.WindowAdapter
  {
    public void windowClosing(java.awt.event.WindowEvent event)
    {
      Object object = event.getSource();
      if (object == TyStalled.this)
        TyStalled_windowClosing(event);
    }
  }

  class SymAction implements java.awt.event.ActionListener
  {
    public void actionPerformed(java.awt.event.ActionEvent event)
    { 
      Object object = event.getSource();
      if (object == exitItem)
        exitItem_actionPerformed(event);
      else if (object == Help)
        Help_actionPerformed(event);
      else  if (object == about)
        about_actionPerformed(event);
			else if (object == RefreshButton)
				RefreshButton_actionPerformed(event);
			else if (object == ReSchdButton)
				ReSchdButton_actionPerformed(event);
			else if (object == PurgeButton)
				PurgeButton_actionPerformed(event);
			else if (object == DetailButton)
				DetailButton_actionPerformed(event);          
      
    }
  }

	class SymListSelection implements javax.swing.event.ListSelectionListener
	{
		public void valueChanged(javax.swing.event.ListSelectionEvent event)
		{
			Object object = event.getSource();
			if (object == StalledList)
				StalledList_valueChanged(event);
		}
	}

	static java.util.ResourceBundle tyStalledBundle = java.util.ResourceBundle.getBundle("com.tymeac.client.jframe.TyStalledBundle");
  public TyStalled()
  {
    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.
    //{{INIT_CONTROLS
    setJMenuBar(JMenuBar1);
    setTitle(tyStalledBundle.getString("TyStalled_title"));
    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    getContentPane().setLayout(null);
    setSize(630,460);
		setVisible(false);
    //$$ JMenuBar1.move(144,456);
    fileMenu.setText(tyStalledBundle.getString("fileMenu_text"));
    fileMenu.setActionCommand(tyStalledBundle.getString("fileMenu_actionCommand"));
		fileMenu.setToolTipText(tyStalledBundle.getString("fileMenu_toolTipText").length() != 0 ? tyStalledBundle.getString("fileMenu_toolTipText") : null);
    fileMenu.setMnemonic((int)'F');
    JMenuBar1.add(fileMenu);
    
    fileMenu.add(JSeparator1);
    
    exitItem.setText(tyStalledBundle.getString("exitItem_text"));
    exitItem.setActionCommand(tyStalledBundle.getString("exitItem_actionCommand"));
		exitItem.setToolTipText(tyStalledBundle.getString("exitItem_toolTipText").length() != 0 ? tyStalledBundle.getString("exitItem_toolTipText") : null);
    exitItem.setMnemonic((int)'X');
    fileMenu.add(exitItem);
		JSeparator1.setToolTipText(tyStalledBundle.getString("JSeparator1_toolTipText").length() != 0 ? tyStalledBundle.getString("JSeparator1_toolTipText") : null);
    
    helpMenu.setText(tyStalledBundle.getString("helpMenu_text"));
    helpMenu.setActionCommand(tyStalledBundle.getString("helpMenu_actionCommand"));
		helpMenu.setToolTipText(tyStalledBundle.getString("helpMenu_toolTipText").length() != 0 ? tyStalledBundle.getString("helpMenu_toolTipText") : null);
    helpMenu.setMnemonic((int)'H');
    JMenuBar1.add(helpMenu);
    
    fileMenu.add(JSeparator1);
       
    Help.setText(tyStalledBundle.getString("Help_text"));
    Help.setActionCommand(tyStalledBundle.getString("Help_actionCommand"));
		Help.setToolTipText(tyStalledBundle.getString("Help_toolTipText").length() != 0 ? tyStalledBundle.getString("Help_toolTipText") : null);
    Help.setMnemonic((int)'D');
    helpMenu.add(Help);
    
    fileMenu.add(JSeparator1);
    
    about.setText(tyStalledBundle.getString("about_text"));
    about.setActionCommand(tyStalledBundle.getString("about_actionCommand"));
		about.setToolTipText(tyStalledBundle.getString("about_toolTipText").length() != 0 ? tyStalledBundle.getString("about_toolTipText") : null);
    about.setMnemonic((int)'A');
    helpMenu.add(about); 
		Msg.setText(tyStalledBundle.getString("Msg_text"));
		Msg.setToolTipText(tyStalledBundle.getString("Msg_toolTipText").length() != 0 ? tyStalledBundle.getString("Msg_toolTipText") : null);
		getContentPane().add(Msg);
		Msg.setBackground(java.awt.Color.lightGray);
		Msg.setForeground(new java.awt.Color(128,0,0));
		Msg.setBounds(20,420,590,30);
		StalledLabel.setText(tyStalledBundle.getString("StalledLabel_text"));
		StalledLabel.setToolTipText(tyStalledBundle.getString("StalledLabel_toolTipText").length() != 0 ? tyStalledBundle.getString("StalledLabel_toolTipText") : null);
		getContentPane().add(StalledLabel);
		StalledLabel.setBounds(28,28,400,20);
		DetailLabel.setText(tyStalledBundle.getString("DetailLabel_text"));
		DetailLabel.setToolTipText(tyStalledBundle.getString("DetailLabel_toolTipText").length() != 0 ? tyStalledBundle.getString("DetailLabel_toolTipText") : null);
		getContentPane().add(DetailLabel);
		DetailLabel.setBounds(30,258,400,20);
		RefreshButton.setText(tyStalledBundle.getString("RefreshButton_text"));
		RefreshButton.setActionCommand(tyStalledBundle.getString("RefreshButton_actionCommand"));
		RefreshButton.setToolTipText(tyStalledBundle.getString("RefreshButton_toolTipText").length() != 0 ? tyStalledBundle.getString("RefreshButton_toolTipText") : null);
		getContentPane().add(RefreshButton);
		RefreshButton.setBounds(492,48,110,30);
		ReSchdButton.setText(tyStalledBundle.getString("ReSchdButton_text"));
		ReSchdButton.setActionCommand(tyStalledBundle.getString("ReSchdButton_actionCommand"));
		ReSchdButton.setToolTipText(tyStalledBundle.getString("ReSchdButton_toolTipText").length() != 0 ? tyStalledBundle.getString("ReSchdButton_toolTipText") : null);
		ReSchdButton.setEnabled(false);
		getContentPane().add(ReSchdButton);
		ReSchdButton.setBounds(492,96,110,30);
		PurgeButton.setText(tyStalledBundle.getString("PurgeButton_text"));
		PurgeButton.setActionCommand(tyStalledBundle.getString("PurgeButton_actionCommand"));
		PurgeButton.setToolTipText(tyStalledBundle.getString("PurgeButton_toolTipText").length() != 0 ? tyStalledBundle.getString("PurgeButton_toolTipText") : null);
		PurgeButton.setEnabled(false);
		getContentPane().add(PurgeButton);
		PurgeButton.setBounds(492,144,110,30);
		DetailButton.setText(tyStalledBundle.getString("DetailButton_text"));
		DetailButton.setActionCommand(tyStalledBundle.getString("DetailButton_actionCommand"));
		DetailButton.setToolTipText(tyStalledBundle.getString("DetailButton_toolTipText").length() != 0 ? tyStalledBundle.getString("DetailButton_toolTipText") : null);
		DetailButton.setEnabled(false);
		getContentPane().add(DetailButton);
		DetailButton.setBounds(492,276,110,30);
		StalledPane.setOpaque(true);
		StalledPane.setToolTipText(tyStalledBundle.getString("StalledPane_toolTipText").length() != 0 ? tyStalledBundle.getString("StalledPane_toolTipText") : null);
		getContentPane().add(StalledPane);
		StalledPane.setBounds(24,48,444,180);
		StalledList.setToolTipText(tyStalledBundle.getString("StalledList_toolTipText").length() != 0 ? tyStalledBundle.getString("StalledList_toolTipText") : null);
		StalledPane.getViewport().add(StalledList);
		StalledList.setBounds(0,0,441,177);
		DetailPane.setOpaque(true);
		DetailPane.setToolTipText(tyStalledBundle.getString("DetailPane_toolTipText").length() != 0 ? tyStalledBundle.getString("DetailPane_toolTipText") : null);
		getContentPane().add(DetailPane);
		DetailPane.setBounds(24,276,444,132);
		DetailList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		DetailList.setToolTipText(tyStalledBundle.getString("DetailList_toolTipText").length() != 0 ? tyStalledBundle.getString("DetailList_toolTipText") : null);
		DetailPane.getViewport().add(DetailList);
		DetailList.setBounds(0,0,441,129);
		JMenuBar1.setToolTipText(tyStalledBundle.getString("JMenuBar1_toolTipText").length() != 0 ? tyStalledBundle.getString("JMenuBar1_toolTipText") : null);

    //}}

		Msg.setBorder(new javax.swing.border.EtchedBorder());

    //{{INIT_MENUS
    //}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    
    SymAction lSymAction = new SymAction();
    exitItem.addActionListener(lSymAction);
    Help.addActionListener(lSymAction);
    about.addActionListener(lSymAction);
		SymListSelection lSymListSelection = new SymListSelection();
		StalledList.addListSelectionListener(lSymListSelection);
		RefreshButton.addActionListener(lSymAction);
		ReSchdButton.addActionListener(lSymAction);
		PurgeButton.addActionListener(lSymAction);
		DetailButton.addActionListener(lSymAction);
		//}}
  }
    public TyStalled(TymeacInterface TyI)
    {
			this();
    	Ti = TyI;

    	try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
    }
    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     */
  public TyStalled(String sTitle)
  {
    this();
    setTitle(sTitle);
  }
   void about_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    about_actionPerformed_Interaction1(event);
  }
  void about_actionPerformed_Interaction1(java.awt.event.ActionEvent event) { 
  
    try {
      // TymeacAbout Create with owner and show as modal
      {
        TyAbout TyAbout1 = new TyAbout(this);
        TyAbout1.setModal(true);
        TyAbout1.setVisible(true);
      }
    } catch (Exception e) {
    }
  }
    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
  public void addNotify()
  {
    // Record the size of the window prior to calling parents addNotify.
    Dimension size = getSize();
    
    super.addNotify();
    
    if (frameSizeAdjusted)
      return;
    frameSizeAdjusted = true;
    
    // Adjust size of frame according to the insets and menu bar
    javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
    int menuBarHeight = 0;
    if (menuBar != null)
        menuBarHeight = menuBar.getPreferredSize().height;
    Insets insets = getInsets();
    setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
  }
	void DetailButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		DetailButton_actionPerformed_Interaction1(event);
	}
	void DetailButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
		    // function
    		TyStalledBean21.detailButton((String)StalledList.getSelectedValue(), DetailList);
    
  		  // the result of this:
  			switch (TyStalledBean21.getDetResult()) {
                  
        		case 0: Msg.setText(tyStalledBundle.getString("case_0__Msg_text_3"));
                  	break;                    
            
        		case 1: Msg.setText(tyStalledBundle.getString("case_1__Msg_text_1")); 
                  	break;
        
        		case 2: Msg.setText(tyStalledBundle.getString("case_2__Msg_text_3")); 
                  	break;
        
        		case 3: Msg.setText(tyStalledBundle.getString("case_3__Msg_text_3")); 
                  	break;

        		case 4: Msg.setText(tyStalledBundle.getString("case_4__Msg_text_2")); 
                  	break;
                
  		 } // end-switch 

		} catch (java.lang.Exception e) {
		}
	}
  //{{DECLARE_MENUS
	//}}

  void exitApplication()
  {    
    this.setVisible(false);    // hide the Frame
    this.dispose();            // free the system resources
		if  (Ti == null) {
    		System.exit(0);    // close the application 
    } // endif
  }
  void exitItem_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    exitItem_actionPerformed_Interaction1(event);
  }
  void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
  void Help_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    Help_actionPerformed_Interaction1(event);
  }
  void Help_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    
    TyHelp th = new TyHelp();

    th.putOut(tyStalledBundle.getString("th_putOut"));
    
  }
  /**
   * The entry point for this application.
   * Sets the Look and Feel to the System Look and Feel.
   * Creates a new JFrame1 and makes it visible.
   */
  static public void main(String args[])
  {
    try {
        // Add the following code if you want the Look and Feel
        // to be set to the Look and Feel of the native system.
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
        

      //Create a new instance of our application's frame, and make it visible.
      (new TyStalled()).setVisible(true);
    } 
    catch (Throwable t) {
      t.printStackTrace();
      //Ensure the application exits with an error condition.
      System.exit(1);
    }
  }
	void PurgeButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		PurgeButton_actionPerformed_Interaction1(event);
	}
	void PurgeButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
		    // function
		    TyStalledBean21.purgeButton(StalledList, StalledList.getSelectedIndices(), DetailList);
		   
				// local
		    boolean visable = true;
    
		  	// the result of this:
		  	switch (TyStalledBean21.getPurResult()) {
                  
	    			case 0: Msg.setText(tyStalledBundle.getString("case_0__Msg_text_2"));
  	                break;
                  
  		  		case 2: Msg.setText(tyStalledBundle.getString("case_2__Msg_text_2"));
  		              visable = false; 
	                  break;
        
  		      case 3: Msg.setText(tyStalledBundle.getString("case_3__Msg_text_2")); 
  	                break;
        
  		      case 4: Msg.setText(tyStalledBundle.getString("case_4__Msg_text_1")); 
    		            visable = false;
    	              break;

  		      case 5: Msg.setText(tyStalledBundle.getString("case_5__Msg_text_1")); 
    	              break;
                                    
    } // end-switch   
  			
		// what to do about the buttons
		PurgeButton.setEnabled(visable);
		ReSchdButton.setEnabled(visable);
		DetailButton.setEnabled(visable);

		} catch (java.lang.Exception e) {
		}
	}
	void RefreshButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		RefreshButton_actionPerformed_Interaction1(event);
	}
	void RefreshButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
				// first
				if  (TyStalledBean21 == null) {

						// When internal
          	if  (Ti != null) {

              	// get the obj
              	TyStalledBean21 = new TyStalledBean2(Ti);
          	}
          	else {
          			 // get the obj
            		TyStalledBean21 = new TyStalledBean2();

          	} // endif
				} // endif
        
    		// function
    		TyStalledBean21.refreshButton(StalledList, DetailList);
    
    		// the result of this:
		    switch (TyStalledBean21.getRefResult()) {
                  
    		    case 0: Msg.setText(tyStalledBundle.getString("case_0__Msg_text"));
        	          break;
                  
		        case 2: Msg.setText(tyStalledBundle.getString("case_2__Msg_text")); 
    	              break;
        
      		  case 3: Msg.setText(tyStalledBundle.getString("case_3__Msg_text")); 
          	        break;
                                    
    		} // end-switch  


		} catch (java.lang.Exception e) {
		}
	}
	void ReSchdButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		ReSchdButton_actionPerformed_Interaction1(event);
	}
	void ReSchdButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
    		// user code end
    		TyStalledBean21.reSchdButton(StalledList, (String)StalledList.getSelectedValue(), DetailList);
    
				// local
    		boolean visable = true;

    		// the result of this:
    		switch (TyStalledBean21.getReSchdResult()) {
                  
        
        		case 0: Msg.setText(tyStalledBundle.getString("case_0__Msg_text_1"));
            		    visable = false;
                	  break;  

		        case 1: Msg.setText(tyStalledBundle.getString("case_1__Msg_text"));
    		            visable = false;
        	          break;  

        		case 2: Msg.setText(tyStalledBundle.getString("case_2__Msg_text_1"));
            	      break;  

        		case 3: Msg.setText(tyStalledBundle.getString("case_3__Msg_text_1"));
            	      break;  

        		case 4: Msg.setText(tyStalledBundle.getString("case_4__Msg_text"));
            	      break;  

        		case 5: Msg.setText(tyStalledBundle.getString("case_5__Msg_text"));
            	      break;  

        		case 6: Msg.setText(tyStalledBundle.getString("case_6__Msg_text"));
            		    visable = false;
                	  break;  

        		case 7: Msg.setText(tyStalledBundle.getString("case_7__Msg_text"));
            	      break;  

        		case 8: Msg.setText(tyStalledBundle.getString("case_8__Msg_text"));
            	      break;  

        		case 9: Msg.setText(tyStalledBundle.getString("case_9__Msg_text"));
            		    visable = false;
                	  break;  

		        case 10: Msg.setText(tyStalledBundle.getString("case_10__Msg_text"));
    	              break;  

      		  case 11: Msg.setText(tyStalledBundle.getString("case_11__Msg_text"));
          		        visable = false;
              	    break;

        		default: Msg.setText(tyStalledBundle.getString("default__Msg_text")
                                    + TyStalledBean21.getReSchdResult()
                                    + tyStalledBundle.getString("TokenString"));
            	      break;  
                                    
    } // end-switch 
		 	
		// what to do about the buttons
		PurgeButton.setEnabled(visable);
		ReSchdButton.setEnabled(visable);
		DetailButton.setEnabled(visable);


		} catch (java.lang.Exception e) {
		}
	}
	void StalledList_valueChanged(javax.swing.event.ListSelectionEvent event)
	{
		// to do: code goes here.
			 
		StalledList_valueChanged_Interaction1(event);
	}
	void StalledList_valueChanged_Interaction1(javax.swing.event.ListSelectionEvent event)
	{
		try {
				// When something selected
				if  (StalledList.getSelectedIndex() >= 0) {

						// enable buttons
						PurgeButton.setEnabled(true);
						ReSchdButton.setEnabled(true);
						DetailButton.setEnabled(true);
				}
				else {
						// disable buttons
						PurgeButton.setEnabled(false);
						ReSchdButton.setEnabled(false);
						DetailButton.setEnabled(false);
		
				} // endif

		} catch (java.lang.Exception e) {
		}
	}
  void TyStalled_windowClosing(java.awt.event.WindowEvent event)
  {
    // to do: code goes here.
       
    TyStalled_windowClosing_Interaction1(event);
  }
  void TyStalled_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
}
