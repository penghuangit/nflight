package com.tymeac.client.jframe;

/* 
 * Copyright (c) 1998 - 2004 Cooperative Software Systems, Inc. 
 *
 * The contents of this file are subject to the Common Public License   
 * ("License"). You may not use this file except in compliance with
 * the License. A copy of the License is part of this distribution and
 * is also available at:
 * http://www.opensource.org/licenses/cpl.php
 */

import java.awt.*;
import javax.swing.*;
import java.util.*;
import com.tymeac.base.*;
/**
 * The Function display frame.
 */
public class TyFuncMaint extends javax.swing.JFrame
{
  private static final long serialVersionUID = 1L;

  // Used by addNotify
  boolean frameSizeAdjusted = false;

  //{{DECLARE_CONTROLS
	javax.swing.JTextField FunctionText = new javax.swing.JTextField();
	javax.swing.JButton ImportButton = new javax.swing.JButton();
	javax.swing.JButton DeleteButton = new javax.swing.JButton();
	javax.swing.JButton AddButton = new javax.swing.JButton();
	javax.swing.JButton RemoveButton = new javax.swing.JButton();
	javax.swing.JButton FinishButton = new javax.swing.JButton();
	javax.swing.JLabel FunctionLabel = new javax.swing.JLabel();
	javax.swing.JLabel OALabel = new javax.swing.JLabel();
	javax.swing.JTextField OAText = new javax.swing.JTextField();
	javax.swing.JLabel AddLabel = new javax.swing.JLabel();
	javax.swing.JTextField AddText = new javax.swing.JTextField();
	javax.swing.JLabel ListLabel = new javax.swing.JLabel();
	javax.swing.JScrollPane ListScrollPane = new javax.swing.JScrollPane();
	javax.swing.JList TheList = new javax.swing.JList();
	javax.swing.JLabel Msg = new javax.swing.JLabel();
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem Help = new javax.swing.JMenuItem();
	javax.swing.JMenuItem about = new javax.swing.JMenuItem();
	java.awt.FileDialog OpenCfgFile = new java.awt.FileDialog(this);
	//}}

	TyFuncMaintBean2 TyFuncMaintBean21 = null;
	TyCfgFields base = null;
	String ty_dir = null;
	String ty_file = null; 


  class SymWindow extends java.awt.event.WindowAdapter
  {
    public void windowClosing(java.awt.event.WindowEvent event)
    {
      Object object = event.getSource();
      if (object == TyFuncMaint.this)
        TyFuncMaint_windowClosing(event);
    }
  }

  class SymAction implements java.awt.event.ActionListener
  {
    public void actionPerformed(java.awt.event.ActionEvent event)
    { 
      Object object = event.getSource();
      if (object == exitItem)
        exitItem_actionPerformed(event);
      else if (object == Help)
        Help_actionPerformed(event);
      else  if (object == about)
        about_actionPerformed(event);
			else if (object == AddButton)
				AddButton_actionPerformed(event);
			else if (object == RemoveButton)
				RemoveButton_actionPerformed(event);
			else if (object == ImportButton)
				ImportButton_actionPerformed(event);
			else if (object == DeleteButton)
				DeleteButton_actionPerformed(event);
			else if (object == FinishButton)
				FinishButton_actionPerformed(event);     
      
    }
  }

	class SymListSelection implements javax.swing.event.ListSelectionListener
	{
		public void valueChanged(javax.swing.event.ListSelectionEvent event)
		{
			Object object = event.getSource();
			if (object == TheList)
				TheList_valueChanged(event);
		}
	}

	static java.util.ResourceBundle tyFuncMaintBundle = java.util.ResourceBundle.getBundle("com.tymeac.client.jframe.TyFuncMaintBundle");
  public TyFuncMaint()
  {
    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.
    //{{INIT_CONTROLS
    setJMenuBar(JMenuBar1);
    setTitle(tyFuncMaintBundle.getString("TyFuncMaint_title"));
    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    getContentPane().setLayout(null);
    setSize(600,420);
		setVisible(false);
		FunctionText.setText(tyFuncMaintBundle.getString("FunctionText_text"));
//		FunctionText.setNextFocusableComponent(OAText);
		FunctionText.setToolTipText(tyFuncMaintBundle.getString("FunctionText_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("FunctionText_toolTipText") : null);
		getContentPane().add(FunctionText);
		FunctionText.setBounds(44,30,200,34);
    //$$ JMenuBar1.move(180,432);
    fileMenu.setText(tyFuncMaintBundle.getString("fileMenu_text"));
    fileMenu.setActionCommand(tyFuncMaintBundle.getString("fileMenu_actionCommand"));
		fileMenu.setToolTipText(tyFuncMaintBundle.getString("fileMenu_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("fileMenu_toolTipText") : null);
    fileMenu.setMnemonic((int)'F');
    JMenuBar1.add(fileMenu);
    
    fileMenu.add(JSeparator1);
    
    exitItem.setText(tyFuncMaintBundle.getString("exitItem_text"));
    exitItem.setActionCommand(tyFuncMaintBundle.getString("exitItem_actionCommand"));
		exitItem.setToolTipText(tyFuncMaintBundle.getString("exitItem_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("exitItem_toolTipText") : null);
    exitItem.setMnemonic((int)'X');
    fileMenu.add(exitItem);
		JSeparator1.setToolTipText(tyFuncMaintBundle.getString("JSeparator1_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("JSeparator1_toolTipText") : null);
    
    helpMenu.setText(tyFuncMaintBundle.getString("helpMenu_text"));
    helpMenu.setActionCommand(tyFuncMaintBundle.getString("helpMenu_actionCommand"));
		helpMenu.setToolTipText(tyFuncMaintBundle.getString("helpMenu_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("helpMenu_toolTipText") : null);
    helpMenu.setMnemonic((int)'H');
    JMenuBar1.add(helpMenu);
    
    fileMenu.add(JSeparator1);
       
    Help.setText(tyFuncMaintBundle.getString("Help_text"));
    Help.setActionCommand(tyFuncMaintBundle.getString("Help_actionCommand"));
		Help.setToolTipText(tyFuncMaintBundle.getString("Help_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("Help_toolTipText") : null);
    Help.setMnemonic((int)'D');
    helpMenu.add(Help);
    
    fileMenu.add(JSeparator1);
    
    about.setText(tyFuncMaintBundle.getString("about_text"));
    about.setActionCommand(tyFuncMaintBundle.getString("about_actionCommand"));
		about.setToolTipText(tyFuncMaintBundle.getString("about_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("about_toolTipText") : null);
    about.setMnemonic((int)'A');
    helpMenu.add(about); 
		ImportButton.setText(tyFuncMaintBundle.getString("ImportButton_text"));
		ImportButton.setActionCommand(tyFuncMaintBundle.getString("ImportButton_actionCommand"));
		ImportButton.setToolTipText(tyFuncMaintBundle.getString("ImportButton_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("ImportButton_toolTipText") : null);
		ImportButton.setFocusPainted(false);
		getContentPane().add(ImportButton);
		ImportButton.setBounds(295,30,80,35);
		DeleteButton.setText(tyFuncMaintBundle.getString("DeleteButton_text"));
		DeleteButton.setActionCommand(tyFuncMaintBundle.getString("DeleteButton_actionCommand"));
		DeleteButton.setToolTipText(tyFuncMaintBundle.getString("DeleteButton_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("DeleteButton_toolTipText") : null);
		getContentPane().add(DeleteButton);
		DeleteButton.setBounds(504,30,80,34);
		AddButton.setText(tyFuncMaintBundle.getString("AddButton_text"));
		AddButton.setActionCommand(tyFuncMaintBundle.getString("AddButton_actionCommand"));
		AddButton.setToolTipText(tyFuncMaintBundle.getString("AddButton_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("AddButton_toolTipText") : null);
		getContentPane().add(AddButton);
		AddButton.setBounds(504,190,80,34);
		RemoveButton.setText(tyFuncMaintBundle.getString("RemoveButton_text"));
		RemoveButton.setActionCommand(tyFuncMaintBundle.getString("RemoveButton_actionCommand"));
		RemoveButton.setToolTipText(tyFuncMaintBundle.getString("RemoveButton_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("RemoveButton_toolTipText") : null);
		RemoveButton.setEnabled(false);
		getContentPane().add(RemoveButton);
		RemoveButton.setBounds(504,250,80,34);
		FinishButton.setText(tyFuncMaintBundle.getString("FinishButton_text"));
		FinishButton.setActionCommand(tyFuncMaintBundle.getString("FinishButton_actionCommand"));
		FinishButton.setToolTipText(tyFuncMaintBundle.getString("FinishButton_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("FinishButton_toolTipText") : null);
		getContentPane().add(FinishButton);
		FinishButton.setBounds(504,350,80,34);
		FunctionLabel.setText(tyFuncMaintBundle.getString("FunctionLabel_text"));
		FunctionLabel.setToolTipText(tyFuncMaintBundle.getString("FunctionLabel_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("FunctionLabel_toolTipText") : null);
		getContentPane().add(FunctionLabel);
		FunctionLabel.setBounds(44,60,124,21);
		OALabel.setText(tyFuncMaintBundle.getString("OALabel_text"));
		OALabel.setToolTipText(tyFuncMaintBundle.getString("OALabel_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("OALabel_toolTipText") : null);
		getContentPane().add(OALabel);
		OALabel.setBounds(44,130,200,34);
		OAText.setText(tyFuncMaintBundle.getString("OAText_text"));
//		OAText.setNextFocusableComponent(AddText);
		OAText.setToolTipText(tyFuncMaintBundle.getString("OAText_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("OAText_toolTipText") : null);
		getContentPane().add(OAText);
		OAText.setBounds(44,105,200,34);
		AddLabel.setText(tyFuncMaintBundle.getString("AddLabel_text"));
		AddLabel.setToolTipText(tyFuncMaintBundle.getString("AddLabel_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("AddLabel_toolTipText") : null);
		getContentPane().add(AddLabel);
		AddLabel.setBounds(276,222,125,24);
		AddText.setText(tyFuncMaintBundle.getString("AddText_text"));
		AddText.setToolTipText(tyFuncMaintBundle.getString("AddText_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("AddText_toolTipText") : null);
		getContentPane().add(AddText);
		AddText.setBounds(276,190,200,34);
		ListLabel.setText(tyFuncMaintBundle.getString("ListLabel_text"));
		ListLabel.setToolTipText(tyFuncMaintBundle.getString("ListLabel_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("ListLabel_toolTipText") : null);
		getContentPane().add(ListLabel);
		ListLabel.setBounds(44,342,125,31);
		ListScrollPane.setOpaque(true);
		ListScrollPane.setToolTipText(tyFuncMaintBundle.getString("ListScrollPane_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("ListScrollPane_toolTipText") : null);
		getContentPane().add(ListScrollPane);
		ListScrollPane.setBounds(44,190,200,160);
		TheList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		TheList.setToolTipText(tyFuncMaintBundle.getString("TheList_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("TheList_toolTipText") : null);
		ListScrollPane.getViewport().add(TheList);
		TheList.setBounds(0,0,197,157);
		Msg.setText(tyFuncMaintBundle.getString("Msg_text"));
		Msg.setToolTipText(tyFuncMaintBundle.getString("Msg_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("Msg_toolTipText") : null);
		getContentPane().add(Msg);
		Msg.setForeground(new java.awt.Color(128,0,0));
		Msg.setBounds(20,380,450,30);
		JMenuBar1.setToolTipText(tyFuncMaintBundle.getString("JMenuBar1_toolTipText").length() != 0 ? tyFuncMaintBundle.getString("JMenuBar1_toolTipText") : null);
		OpenCfgFile.setMode(FileDialog.LOAD);
		OpenCfgFile.setTitle(tyFuncMaintBundle.getString("OpenCfgFile_title"));
		OpenCfgFile.setDirectory(tyFuncMaintBundle.getString("OpenCfgFile_directory"));
		OpenCfgFile.setFile(tyFuncMaintBundle.getString("OpenCfgFile_file"));
		//$$ OpenCfgFile.move(0,451);
		//$$ OpenFileDialog.move(0,451);
		//$$ SaveFileDialog.move(24,451);

    //}}

		Msg.setBorder(new javax.swing.border.EtchedBorder());

    //{{INIT_MENUS
    //}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    
    SymAction lSymAction = new SymAction();
    exitItem.addActionListener(lSymAction);
    Help.addActionListener(lSymAction);
    about.addActionListener(lSymAction);
		AddButton.addActionListener(lSymAction);
		SymListSelection lSymListSelection = new SymListSelection();
		TheList.addListSelectionListener(lSymListSelection);
		RemoveButton.addActionListener(lSymAction);
		ImportButton.addActionListener(lSymAction);
		DeleteButton.addActionListener(lSymAction);
		FinishButton.addActionListener(lSymAction);
		//}}
  }
    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     */
  public TyFuncMaint(String sTitle)
  {
    this();
    setTitle(sTitle);
  }
   void about_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    about_actionPerformed_Interaction1(event);
  }
  void about_actionPerformed_Interaction1(java.awt.event.ActionEvent event) { 
  
    try {
      // TymeacAbout Create with owner and show as modal
      {
        TyAbout TyAbout1 = new TyAbout(this);
        TyAbout1.setModal(true);
        TyAbout1.setVisible(true);
      }
    } catch (Exception e) {
    }
  }
	void AddButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		AddButton_actionPerformed_Interaction1(event);
	}
	void AddButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// AddButton 

			// text field to string
			String addData = AddText.getText();

			int i;
			
			// When no data
			if  ((addData == null) ||
					 (addData.length() < 1)) {
		
					// say so
					Msg.setText(tyFuncMaintBundle.getString("Msg_text_4"));

					// done
					return;

			} // endif

			// When need cfg file
			if  (base == null) {

					// When basic stuff failed
					if  (basicFile() != 0) {

							// get out
							return;

					} // endif
			} // endif

			// verify the queue
	    int why = TyFuncMaintBean21.verifySingle(addData);

			// get the result message
   // Msg.setText(TySwingMsg.getMsg(1100 + TyFuncDataBean21.getRefResult()));
    
//*     
		
			// what came back
			switch (why) {// get the result message
     

					case 0: break;

					case 1: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_5"));

									// done
									return; 

					case 2: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_6"));

									// done
									return; 

					case 3: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_7"));

									// done
									return; 

					case 4: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_8"));

									// done
									return; 

					case 5: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_9"));

									// done
									return; 

					case 6: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_10"));

									// done
									return; 

					case 7: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_11"));

									// done
									return; 

			} // end-switch

			// total number in list
			int len = TheList.getModel().getSize();

			// new array
			String[] data = new String[len + 1];

			// add the old list to the new array
			for  (i = 0; i < len; i++) {

					// each queue
					data[i] = (String) TheList.getModel().getElementAt(i);

			} // end-for

			// add the new queue name
			data[i] = addData;

			// kill the old list
			TheList.removeAll();

			// create a new list
			TheList.setListData(data);

			// ADD data null
			AddText.setText(tyFuncMaintBundle.getString("AddText_text_1"));	

			// must first select something
			RemoveButton.setEnabled(false);

			// good message 
			Msg.setText(tyFuncMaintBundle.getString("Msg_text_12"));
			
		} catch (java.lang.Exception e) {
		}
	}
    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
  public void addNotify()
  {
    // Record the size of the window prior to calling parents addNotify.
    Dimension size = getSize();
    
    super.addNotify();
    
    if (frameSizeAdjusted)
      return;
    frameSizeAdjusted = true;
    
    // Adjust size of frame according to the insets and menu bar
    javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
    int menuBarHeight = 0;
    if (menuBar != null)
        menuBarHeight = menuBar.getPreferredSize().height;
    Insets insets = getInsets();
    setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
  }
  //{{DECLARE_MENUS
	//}}

	// basic stuff for me
	int basicFile() {

		try {
				// Show the FileDialog
				OpenCfgFile.setVisible(true);

		} // end-try
 
		catch (java.lang.Exception e) {

				// say error
				Msg.setText(tyFuncMaintBundle.getString("Msg_text_1"));

				// done
				return 1;

		} // end-catch       

    try {
				// get the dir and file name
		    ty_dir = OpenCfgFile.getDirectory();
		    ty_file = OpenCfgFile.getFile();    

		} // end-try

		catch (java.lang.Exception e) {
						
				// say so
				Msg.setText(tyFuncMaintBundle.getString("Msg_text_2"));

				// done
				return 1;

		} // end-catch 

		// new base of the cfg fields
		TyCfgFields xbase = new TyCfgFields();					

		// do the file read and load
    int reason = TyCfgFileIO.getFile(ty_dir, ty_file, xbase);

    // when no good
    if  (reason > 0) {

        // put the message
        TyCfgFileIO.putMsg(reason, ty_dir, ty_file);

          // say so
					Msg.setText(tyFuncMaintBundle.getString("Msg_text_3"));

					// done
					return 1;
      } // endif    

		// when first
    if  (TyFuncMaintBean21 == null) {
		
	       // get a new obj
	       TyFuncMaintBean21 = new TyFuncMaintBean2(xbase);    

		} // endif

		// save the cfg fields
		base = xbase; 

		// good 
		return 0;

	} // end-method
	void DeleteButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		DeleteButton_actionPerformed_Interaction1(event);
	}
	void DeleteButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// 
			// text field to string
			String deleteData = FunctionText.getText();
			
			// When no data
			if  ((deleteData == null) ||
					 (deleteData.length() < 1)) {
		
					// say so
					Msg.setText(tyFuncMaintBundle.getString("Msg_text_19"));

					// done
					return;

			} // endif

			// When need cfg file
			if  (base == null) {

					// When basic stuff failed
					if  (basicFile() != 0) {

							// get out
							return;

					} // endif
			} // endif

		// do the import function
		TyFuncMaintBean21.deleteButton(FunctionText);

		int why = TyFuncMaintBean21.getDelResult();

		// what came back
			switch (why) {

					case 0: 
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_20") + deleteData + tyFuncMaintBundle.getString("deleted"));

									// no function or oa queue
									FunctionText.setText(tyFuncMaintBundle.getString("FunctionText_text_1"));
									OAText.setText(tyFuncMaintBundle.getString("OAText_text_1"));

									// new array
									Vector data = new Vector();

									// new list
									TheList.setListData(data);

									// done
									return;

					case 1: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_21"));

									// done
									return; 

					case 2: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_22"));

									// done
									return; 


					case 3: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_23"));

									// done
									return; 

					case 4: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_24"));

									// done
									return; 

					case 5: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_25"));

									// done
									return; 

			} // end-switch

		} catch (java.lang.Exception e) {
		}
	}
  void exitApplication()
  {    
    this.setVisible(false);    // hide the Frame
    this.dispose();            // free the system resources
    System.exit(0);            // close the application 
    
  }
  void exitItem_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    exitItem_actionPerformed_Interaction1(event);
  }
  void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
	void FinishButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		FinishButton_actionPerformed_Interaction1(event);
	}
	void FinishButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// 
			// text field to string
			String finishData = FunctionText.getText();
			
			// When no data
			if  ((finishData == null) ||
					 (finishData.length() < 1)) {
		
					// say so
					Msg.setText(tyFuncMaintBundle.getString("Msg_text_26"));

					// done
					return;

			} // endif

			// When need cfg file
			if  (base == null) {

					// When basic stuff failed
					if  (basicFile() != 0) {

							// get out
							return;

					} // endif
			} // endif

		// do the import function
		TyFuncMaintBean21.finishButton(	FunctionText,
																		OAText,
																		TheList);

		int why = TyFuncMaintBean21.getUpdResult();

		// what came back
			switch (why) {

					case 0: Msg.setText(
                  FunctionText.getText()
                  + "  "
                  + tyFuncMaintBundle.getString("case_0__Msg_text_1"));
									return;

					case 1: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_27"));

									// done
									return; 

					case 2: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_28"));

									// done
									return; 


					case 3: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_29"));

									// done
									return;  


					case 4: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_30"));

									// done
									return;  


					case 5: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_31"));

									// done
									return;  


					case 6: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_32"));

									// done 
									return;


					case 7: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_33"));

									// done
									return;


					case 8: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_34"));

									// done
									return;


					case 9: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_35"));

									// done
									return;


					case 10: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_36"));

									// done
									return;	

					case 11: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_37"));

									// done
									return;


					case 12: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_38"));

									// done
									return;

			} // end-switch

		} catch (java.lang.Exception e) {
		}
	}
  void Help_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    Help_actionPerformed_Interaction1(event);
  }
  void Help_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    
    TyHelp th = new TyHelp();

    th.putOut(tyFuncMaintBundle.getString("th_putOut"));    
  }
	void ImportButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		ImportButton_actionPerformed_Interaction1(event);
	}
	void ImportButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// ImportButton 

			// text field to string
			String importData = FunctionText.getText();
			
			// When no data
			if  ((importData == null) ||
					 (importData.length() < 1)) {
		
					// say so
					Msg.setText(tyFuncMaintBundle.getString("Msg_text_15"));

					// done
					return;

			} // endif

			// When need cfg file
			if  (base == null) {

					// When basic stuff failed
					if  (basicFile() != 0) {

							// get out
							return;

					} // endif
			} // endif

		// do the import function
		TyFuncMaintBean21.importButton(	FunctionText,
																		OAText,
																		TheList);

		int why = TyFuncMaintBean21.getImpResult();

		// what came back
			switch (why) {

					case 0: Msg.setText(tyFuncMaintBundle.getString("case_0__Msg_text"));
									return;

					case 1: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_16"));

									// done
									return; 

					case 2: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_17"));

									// done
									return; 


					case 3: // say error
									Msg.setText(tyFuncMaintBundle.getString("Msg_text_18"));

									// done
									return; 

			} // end-switch


		} catch (java.lang.Exception e) {
		}
	}
  /**
   * The entry point for this application.
   * Sets the Look and Feel to the System Look and Feel.
   * Creates a new JFrame1 and makes it visible.
   */
  static public void main(String args[])
  {
    try {
        // Add the following code if you want the Look and Feel
        // to be set to the Look and Feel of the native system.
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
        

      //Create a new instance of our application's frame, and make it visible.
      (new TyFuncMaint()).setVisible(true);
    } 
    catch (Throwable t) {
      t.printStackTrace();
      //Ensure the application exits with an error condition.
      System.exit(1);
    }
  }
	void RemoveButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		RemoveButton_actionPerformed_Interaction1(event);
	}
	void RemoveButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
				// index selected
				int the_index = TheList.getSelectedIndex(); 

				// When something selected
				if  (the_index == -1) {

					// nothing selected
					RemoveButton.setEnabled(false);

				} // endif

				// total number in list
				int len = TheList.getModel().getSize();

				// When only one,
				if  (len == 1) {

						// kill the old list
						TheList.removeAll();

						// new array
						String[] data = new String[1];
						data[0] = null;	

						// create a new list
						TheList.setListData(data);

						// must first select something
						RemoveButton.setEnabled(false);

						// good message 
						Msg.setText(tyFuncMaintBundle.getString("Msg_text_13"));

						// done
						return;

				} // endif

				// new array
				String[] data = new String[len - 1];

				// add the old list to the new array without the selected one
				for  (int i = 0, j = 0; i < len; i++) {

							// When it's not the one to skip
							if  (i != the_index) {

									// each queue
									data[j] = (String) TheList.getModel().getElementAt(i);

									// bump new
									j++;

							} // endif
				} // end-for

				// kill the old list
				TheList.removeAll();

				// create a new list
				TheList.setListData(data);

				// must first select something
				RemoveButton.setEnabled(false);

				// good message 
				Msg.setText(tyFuncMaintBundle.getString("Msg_text_14"));

		} catch (java.lang.Exception e) {
		}
	}
	void TheList_valueChanged(javax.swing.event.ListSelectionEvent event)
	{
		// to do: code goes here.
			 
		TheList_valueChanged_Interaction1(event);
	}
	void TheList_valueChanged_Interaction1(javax.swing.event.ListSelectionEvent event)
	{
		try {
			// When something selected
			if  (TheList.getSelectedIndex() == -1) {

					// nothing selected
					RemoveButton.setEnabled(false);
			} 
			else {
					RemoveButton.setEnabled(true);

			} // endif

			//RemoveButton.setEnabled(!RemoveButton.isEnabled());
		} catch (java.lang.Exception e) {
		}
	}
  void TyFuncMaint_windowClosing(java.awt.event.WindowEvent event)
  {
    // to do: code goes here.
       
    TyFuncMaint_windowClosing_Interaction1(event);
  }
  void TyFuncMaint_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
}
