package com.tymeac.client.jframe;
/* 
 * Copyright (c) 1998 - 2004 Cooperative Software Systems, Inc. 
 *
 * The contents of this file are subject to the Common Public License   
 * ("License"). You may not use this file except in compliance with
 * the License. A copy of the License is part of this distribution and
 * is also available at:
 * http://www.opensource.org/licenses/cpl.php
 */

import java.awt.*;
import javax.swing.*;
import com.tymeac.base.*;

/**
 * 
 */
public class TyReqStatus extends javax.swing.JFrame
{
  private static final long serialVersionUID = 1L;

  public TyReqStatus()
  {
    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.
    //{{INIT_CONTROLS
    setJMenuBar(JMenuBar1);
    setTitle(tyReqStatusBundle.getString("TyReqStatus_title"));
    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    getContentPane().setLayout(null);
    setSize(460,180);
		setVisible(false);
		MilliText.setText(tyReqStatusBundle.getString("MilliText_text"));
    //$$ JMenuBar1.move(168,312);
    fileMenu.setText(tyReqStatusBundle.getString("fileMenu_text"));
    fileMenu.setActionCommand(tyReqStatusBundle.getString("fileMenu_actionCommand"));
		fileMenu.setToolTipText(tyReqStatusBundle.getString("fileMenu_toolTipText").length() != 0 ? tyReqStatusBundle.getString("fileMenu_toolTipText") : null);
    fileMenu.setMnemonic((int)'F');
    JMenuBar1.add(fileMenu);
    
    fileMenu.add(JSeparator1);
    
    exitItem.setText(tyReqStatusBundle.getString("exitItem_text"));
    exitItem.setActionCommand(tyReqStatusBundle.getString("exitItem_actionCommand"));
		exitItem.setToolTipText(tyReqStatusBundle.getString("exitItem_toolTipText").length() != 0 ? tyReqStatusBundle.getString("exitItem_toolTipText") : null);
    exitItem.setMnemonic((int)'X');
    fileMenu.add(exitItem);
		JSeparator1.setToolTipText(tyReqStatusBundle.getString("JSeparator1_toolTipText").length() != 0 ? tyReqStatusBundle.getString("JSeparator1_toolTipText") : null);
    
    helpMenu.setText(tyReqStatusBundle.getString("helpMenu_text"));
    helpMenu.setActionCommand(tyReqStatusBundle.getString("helpMenu_actionCommand"));
		helpMenu.setToolTipText(tyReqStatusBundle.getString("helpMenu_toolTipText").length() != 0 ? tyReqStatusBundle.getString("helpMenu_toolTipText") : null);
    helpMenu.setMnemonic((int)'H');
    JMenuBar1.add(helpMenu);
    
    fileMenu.add(JSeparator1);
       
    Help.setText(tyReqStatusBundle.getString("Help_text"));
    Help.setActionCommand(tyReqStatusBundle.getString("Help_actionCommand"));
		Help.setToolTipText(tyReqStatusBundle.getString("Help_toolTipText").length() != 0 ? tyReqStatusBundle.getString("Help_toolTipText") : null);
    Help.setMnemonic((int)'D');
    helpMenu.add(Help);
    
    fileMenu.add(JSeparator1);
    
    about.setText(tyReqStatusBundle.getString("about_text"));
    about.setActionCommand(tyReqStatusBundle.getString("about_actionCommand"));
		about.setToolTipText(tyReqStatusBundle.getString("about_toolTipText").length() != 0 ? tyReqStatusBundle.getString("about_toolTipText") : null);
    about.setMnemonic((int)'A');
    helpMenu.add(about);

		MilliText.setToolTipText(tyReqStatusBundle.getString("MilliText_toolTipText").length() != 0 ? tyReqStatusBundle.getString("MilliText_toolTipText") : null);
		getContentPane().add(MilliText);
		MilliText.setBounds(42,36,125,30);
		IdText.setText(tyReqStatusBundle.getString("IdText_text"));

		IdText.setToolTipText(tyReqStatusBundle.getString("IdText_toolTipText").length() != 0 ? tyReqStatusBundle.getString("IdText_toolTipText") : null);
		getContentPane().add(IdText);
		IdText.setBounds(197,36,125,30);

		MilliLabel.setText(tyReqStatusBundle.getString("MilliLabel_text"));
		MilliLabel.setToolTipText(tyReqStatusBundle.getString("MilliLabel_toolTipText").length() != 0 ? tyReqStatusBundle.getString("MilliLabel_toolTipText") : null);
		getContentPane().add(MilliLabel);
		MilliLabel.setBounds(42,65,108,22);

		IdLabel.setText(tyReqStatusBundle.getString("IdLabel_text"));
		IdLabel.setToolTipText(tyReqStatusBundle.getString("IdLabel_toolTipText").length() != 0 ? tyReqStatusBundle.getString("IdLabel_toolTipText") : null);
		getContentPane().add(IdLabel);
		IdLabel.setBounds(197,65,93,22);


		Msg.setText(tyReqStatusBundle.getString("Msg_text"));
		Msg.setToolTipText(tyReqStatusBundle.getString("Msg_toolTipText").length() != 0 ? tyReqStatusBundle.getString("Msg_toolTipText") : null);
		getContentPane().add(Msg);
		Msg.setForeground(new java.awt.Color(128,0,0));
		Msg.setBounds(20,140,380,30);

		GetButton.setText(tyReqStatusBundle.getString("GetButton_text"));
		GetButton.setActionCommand(tyReqStatusBundle.getString("GetButton_actionCommand"));
		GetButton.setToolTipText(tyReqStatusBundle.getString("GetButton_toolTipText").length() != 0 ? tyReqStatusBundle.getString("GetButton_toolTipText") : null);
		getContentPane().add(GetButton);
		GetButton.setBounds(349,36,86,27);

		CancelButton.setText(tyReqStatusBundle.getString("CancelButton_text"));
		CancelButton.setActionCommand(tyReqStatusBundle.getString("CancelButton_actionCommand"));
		CancelButton.setToolTipText(tyReqStatusBundle.getString("CancelButton_toolTipText").length() != 0 ? tyReqStatusBundle.getString("CancelButton_toolTipText") : null);
		getContentPane().add(CancelButton);
		CancelButton.setBounds(348,84,86,27);
		CancelButton.setBackground(java.awt.Color.pink);

		JMenuBar1.setToolTipText(tyReqStatusBundle.getString("JMenuBar1_toolTipText").length() != 0 ? tyReqStatusBundle.getString("JMenuBar1_toolTipText") : null);

    //}}

		Msg.setBorder(new javax.swing.border.EtchedBorder());

    //{{INIT_MENUS
    //}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    
    SymAction lSymAction = new SymAction();
    exitItem.addActionListener(lSymAction);
    Help.addActionListener(lSymAction);
    about.addActionListener(lSymAction);
		GetButton.addActionListener(lSymAction);
		CancelButton.addActionListener(lSymAction);
		//}}
  }

	public TyReqStatus(TymeacInterface TyI)
    {
				this();
    	Ti = TyI;

    	try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
    }

    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     * @see #JFrame1()
     */
  public TyReqStatus(String sTitle)
  {
    this();
    setTitle(sTitle);
  }
  
  /**
   * The entry point for this application.
   * Sets the Look and Feel to the System Look and Feel.
   * Creates a new JFrame1 and makes it visible.
   */
  static public void main(String args[])
  {
    try {
        // Add the following code if you want the Look and Feel
        // to be set to the Look and Feel of the native system.
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
        

      //Create a new instance of our application's frame, and make it visible.
      (new TyReqStatus()).setVisible(true);
    } 
    catch (Throwable t) {
      t.printStackTrace();
      //Ensure the application exits with an error condition.
      System.exit(1);
    }
  }

    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
  public void addNotify()
  {
    // Record the size of the window prior to calling parents addNotify.
    Dimension size = getSize();
    
    super.addNotify();
    
    if (frameSizeAdjusted)
      return;
    frameSizeAdjusted = true;
    
    // Adjust size of frame according to the insets and menu bar
    javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
    int menuBarHeight = 0;
    if (menuBar != null)
        menuBarHeight = menuBar.getPreferredSize().height;
    Insets insets = getInsets();
    setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
  }

  // Used by addNotify
  boolean frameSizeAdjusted = false;

  //{{DECLARE_CONTROLS
	javax.swing.JTextField MilliText = new javax.swing.JTextField();
	javax.swing.JTextField IdText = new javax.swing.JTextField();
	javax.swing.JLabel MilliLabel = new javax.swing.JLabel();
	javax.swing.JLabel IdLabel = new javax.swing.JLabel();
	javax.swing.JLabel Msg = new javax.swing.JLabel();
	javax.swing.JButton GetButton = new javax.swing.JButton();
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem Help = new javax.swing.JMenuItem();
	javax.swing.JMenuItem about = new javax.swing.JMenuItem();
	javax.swing.JButton CancelButton = new javax.swing.JButton();
	//}}

	TyReqStatusBean2 TyReqStatusBean21 = null;
	TymeacInterface Ti = null;

  //{{DECLARE_MENUS
	//}}

  void exitApplication()
  {    
    this.setVisible(false);    // hide the Frame
    this.dispose();            // free the system resources
    if  (Ti == null) {
				System.exit(0);   // close the application 
    } // endif
  }

  class SymWindow extends java.awt.event.WindowAdapter
  {
    public void windowClosing(java.awt.event.WindowEvent event)
    {
      Object object = event.getSource();
      if (object == TyReqStatus.this)
        TyReqStatus_windowClosing(event);
    }
  }

  void TyReqStatus_windowClosing(java.awt.event.WindowEvent event)
  {
    // to do: code goes here.
       
    TyReqStatus_windowClosing_Interaction1(event);
  }

  void TyReqStatus_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }

  class SymAction implements java.awt.event.ActionListener
  {
    public void actionPerformed(java.awt.event.ActionEvent event)
    { 
      Object object = event.getSource();
      if (object == exitItem)
        exitItem_actionPerformed(event);
      else if (object == Help)
        Help_actionPerformed(event);
      else  if (object == about)
        about_actionPerformed(event);
			else if (object == GetButton)
				GetButton_actionPerformed(event);
			else if (object == CancelButton)
				CancelButton_actionPerformed(event);	          
      
    }
  }

  void exitItem_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    exitItem_actionPerformed_Interaction1(event);
  }

  void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }

  void Help_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    Help_actionPerformed_Interaction1(event);
  }

  void Help_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    
    TyHelp th = new TyHelp();

    th.putOut(tyReqStatusBundle.getString("th_putOut"));
    
  }        
    
   void about_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    about_actionPerformed_Interaction1(event);
  }

  void about_actionPerformed_Interaction1(java.awt.event.ActionEvent event) { 
  
    try {
      // TymeacAbout Create with owner and show as modal
      {
        TyAbout TyAbout1 = new TyAbout(this);
        TyAbout1.setModal(true);
        TyAbout1.setVisible(true);
      }
    } catch (Exception e) {
    }
  }

	void GetButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.

		// When not already there
		if  (TyReqStatusBean21 == null) {

					// When internal
          if  (Ti != null) {

              // get the obj
              TyReqStatusBean21 = new TyReqStatusBean2(Ti);
          }
          else {
          		 // get the obj
            	 TyReqStatusBean21 = new TyReqStatusBean2();

          } // endif
		} // endif
	
		// do the request
    TyReqStatusBean21.getButton(MilliText, IdText);
        
    // the result of this:
    switch (TyReqStatusBean21.getGetResult()) {
          
        case -1: Msg.setText(tyReqStatusBundle.getString("case__1__Msg_text")); 
                   break;
        
        case 1: Msg.setText(tyReqStatusBundle.getString("case_1__Msg_text")); 
                  break;          
          
        case 2: Msg.setText(tyReqStatusBundle.getString("case_2__Msg_text")); 
                  break;          
                  
        case 3: Msg.setText(tyReqStatusBundle.getString("case_3__Msg_text")); 
                  break;  
        
        case 4: Msg.setText(tyReqStatusBundle.getString("case_4__Msg_text")); 
                  break;
        
        case 5: Msg.setText(tyReqStatusBundle.getString("case_5__Msg_text")); 
                  break;
        
        case 6: Msg.setText(tyReqStatusBundle.getString("case_6__Msg_text")); 
                  break;
        
        case 7: Msg.setText(tyReqStatusBundle.getString("case_7__Msg_text")); 
                  break;
        
        case 8: Msg.setText(tyReqStatusBundle.getString("case_8__Msg_text")); 
                  break;
        
        case 9: Msg.setText(tyReqStatusBundle.getString("case_9__Msg_text")); 
                  break;
        
        case 10: Msg.setText(tyReqStatusBundle.getString("case_10__Msg_text")); 
                    break;
        
    } // end-switch
  } // end-method                                                    
                    
	static java.util.ResourceBundle tyReqStatusBundle = java.util.ResourceBundle.getBundle("com.tymeac.client.jframe.TyReqStatusBundle");

	void CancelButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		// When not already there
		if  (TyReqStatusBean21 == null) {

					// When internal
          if  (Ti != null) {

              // get the obj
              TyReqStatusBean21 = new TyReqStatusBean2(Ti);
          }
          else {
          		 // get the obj
            	 TyReqStatusBean21 = new TyReqStatusBean2();

          } // endif
		} // endif
	
		// do the request
    TyReqStatusBean21.cancelButton(MilliText, IdText);
        
    // the result of this:
    switch (TyReqStatusBean21.getGetResult()) {
          
        case -1: Msg.setText(tyReqStatusBundle.getString("case__1__Msg_text")); 
                   break;
        
        case 1: Msg.setText(tyReqStatusBundle.getString("case_1__Msg_text")); 
                  break;          
          
        case 2: Msg.setText(tyReqStatusBundle.getString("case_2__Msg_text")); 
                  break;          
                  
        case 3: Msg.setText(tyReqStatusBundle.getString("case_3__Msg_text")); 
                  break;  
        
        case 4: Msg.setText(tyReqStatusBundle.getString("case_4__Msg_text")); 
                  break;
        
        case 5: Msg.setText(tyReqStatusBundle.getString("case_5__Msg_text")); 
                  break;
        
        case 6: Msg.setText(tyReqStatusBundle.getString("case_6__Msg_text")); 
                  break;
        
        case 7: Msg.setText(tyReqStatusBundle.getString("case_7__Msg_text")); 
                  break;
        
        case 8: Msg.setText(tyReqStatusBundle.getString("case_8__Msg_text")); 
                  break;
        
        case 9: Msg.setText(tyReqStatusBundle.getString("case_9__Msg_text")); 
                  break;
        
        case 10: Msg.setText(tyReqStatusBundle.getString("case_10__Msg_text")); 
                    break;

				case 11: Msg.setText(tyReqStatusBundle.getString("case_11__Msg_text")); 
                    break;

				case 12: Msg.setText(tyReqStatusBundle.getString("case_12__Msg_text")); 
                    break;		
        
    } // end-switch
  } // end-method
} // end-class
