package com.tymeac.client.jframe;

/* 
 * Copyright (c) 1998 - 2004 Cooperative Software Systems, Inc. 
 *
 * The contents of this file are subject to the Common Public License   
 * ("License"). You may not use this file except in compliance with
 * the License. A copy of the License is part of this distribution and
 * is also available at:
 * http://www.opensource.org/licenses/cpl.php
 */

import java.awt.*;
import javax.swing.*;

import com.tymeac.base.*;
/**
 * The Function Data display frame.
 */
public class TyFuncData extends javax.swing.JFrame
{  
  private static final long serialVersionUID = 1L;

  // Used by addNotify
  boolean frameSizeAdjusted = false;

  //{{DECLARE_CONTROLS
	javax.swing.JTextField FuncText = new javax.swing.JTextField();
	javax.swing.JLabel FuncLabel = new javax.swing.JLabel();
	javax.swing.JButton RefreshButton = new javax.swing.JButton();
	javax.swing.JLabel ListLabel = new javax.swing.JLabel();
	javax.swing.JLabel Msg = new javax.swing.JLabel();
	javax.swing.JScrollPane ListScrollPane = new javax.swing.JScrollPane();
	javax.swing.JList List = new javax.swing.JList();
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem Help = new javax.swing.JMenuItem();
	javax.swing.JMenuItem about = new javax.swing.JMenuItem();
	//}}

  // Tymeac fields
  TyFuncDataBean2 TyFuncDataBean21 = null;
	TymeacInterface Ti = null;
  
  class SymWindow extends java.awt.event.WindowAdapter
  {
    public void windowClosing(java.awt.event.WindowEvent event)
    {
      Object object = event.getSource();
      if (object == TyFuncData.this)
        TyFuncData_windowClosing(event);
    }
  }

  class SymAction implements java.awt.event.ActionListener
  {
    public void actionPerformed(java.awt.event.ActionEvent event)
    { 
      Object object = event.getSource();
      if (object == exitItem)
        exitItem_actionPerformed(event);
      else if (object == Help)
        Help_actionPerformed(event);
      else  if (object == about)
        about_actionPerformed(event);
      else if (object == RefreshButton)
        RefreshButton_actionPerformed(event); 
      
    }
  }

	static java.util.ResourceBundle tyFuncDataBundle = java.util.ResourceBundle.getBundle("com.tymeac.client.jframe.TyFuncDataBundle");
  public TyFuncData()
  {
    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.
    //{{INIT_CONTROLS
    setJMenuBar(JMenuBar1);
    setTitle(tyFuncDataBundle.getString("TyFuncData_title"));
    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    getContentPane().setLayout(null);
    setSize(460,370);
    setVisible(false);
		FuncText.setText(tyFuncDataBundle.getString("FuncText_text"));
    //$$ JMenuBar1.move(156,372);
    fileMenu.setText(tyFuncDataBundle.getString("fileMenu_text"));
    fileMenu.setActionCommand(tyFuncDataBundle.getString("fileMenu_actionCommand"));
		fileMenu.setToolTipText(tyFuncDataBundle.getString("fileMenu_toolTipText").length() != 0 ? tyFuncDataBundle.getString("fileMenu_toolTipText") : null);
    fileMenu.setMnemonic((int)'F');
    JMenuBar1.add(fileMenu);
    
    fileMenu.add(JSeparator1);
    
    exitItem.setText(tyFuncDataBundle.getString("exitItem_text"));
    exitItem.setActionCommand(tyFuncDataBundle.getString("exitItem_actionCommand"));
		exitItem.setToolTipText(tyFuncDataBundle.getString("exitItem_toolTipText").length() != 0 ? tyFuncDataBundle.getString("exitItem_toolTipText") : null);
    exitItem.setMnemonic((int)'X');
    fileMenu.add(exitItem);
		JSeparator1.setToolTipText(tyFuncDataBundle.getString("JSeparator1_toolTipText").length() != 0 ? tyFuncDataBundle.getString("JSeparator1_toolTipText") : null);
    
    helpMenu.setText(tyFuncDataBundle.getString("helpMenu_text"));
    helpMenu.setActionCommand(tyFuncDataBundle.getString("helpMenu_actionCommand"));
		helpMenu.setToolTipText(tyFuncDataBundle.getString("helpMenu_toolTipText").length() != 0 ? tyFuncDataBundle.getString("helpMenu_toolTipText") : null);
    helpMenu.setMnemonic((int)'H');
    JMenuBar1.add(helpMenu);
    
    fileMenu.add(JSeparator1);
       
    Help.setText(tyFuncDataBundle.getString("Help_text"));
    Help.setActionCommand(tyFuncDataBundle.getString("Help_actionCommand"));
		Help.setToolTipText(tyFuncDataBundle.getString("Help_toolTipText").length() != 0 ? tyFuncDataBundle.getString("Help_toolTipText") : null);
    Help.setMnemonic((int)'D');
    helpMenu.add(Help);
    
    fileMenu.add(JSeparator1);
    
    about.setText(tyFuncDataBundle.getString("about_text"));
    about.setActionCommand(tyFuncDataBundle.getString("about_actionCommand"));
		about.setToolTipText(tyFuncDataBundle.getString("about_toolTipText").length() != 0 ? tyFuncDataBundle.getString("about_toolTipText") : null);
    about.setMnemonic((int)'A');
    helpMenu.add(about); 
    FuncText.setToolTipText(tyFuncDataBundle.getString("FuncText_toolTipText").length() != 0 ? tyFuncDataBundle.getString("FuncText_toolTipText") : null);
    getContentPane().add(FuncText);
    FuncText.setBounds(44,36,200,30);
    FuncLabel.setText(tyFuncDataBundle.getString("FuncLabel_text"));
		FuncLabel.setToolTipText(tyFuncDataBundle.getString("FuncLabel_toolTipText").length() != 0 ? tyFuncDataBundle.getString("FuncLabel_toolTipText") : null);
    getContentPane().add(FuncLabel);
    FuncLabel.setBounds(44,68,120,25);
    RefreshButton.setText(tyFuncDataBundle.getString("RefreshButton_text"));
    RefreshButton.setActionCommand(tyFuncDataBundle.getString("RefreshButton_actionCommand"));
    RefreshButton.setToolTipText(tyFuncDataBundle.getString("RefreshButton_toolTipText").length() != 0 ? tyFuncDataBundle.getString("RefreshButton_toolTipText") : null);
    getContentPane().add(RefreshButton);
    RefreshButton.setBounds(305,36,90,28);
    ListLabel.setText(tyFuncDataBundle.getString("ListLabel_text"));
		ListLabel.setToolTipText(tyFuncDataBundle.getString("ListLabel_toolTipText").length() != 0 ? tyFuncDataBundle.getString("ListLabel_toolTipText") : null);
    getContentPane().add(ListLabel);
    ListLabel.setBounds(48,108,153,20);
    Msg.setText(tyFuncDataBundle.getString("Msg_text"));
		Msg.setToolTipText(tyFuncDataBundle.getString("Msg_toolTipText").length() != 0 ? tyFuncDataBundle.getString("Msg_toolTipText") : null);
    getContentPane().add(Msg);
    Msg.setForeground(new java.awt.Color(128,0,0));
    Msg.setBounds(20,330,420,30);
    ListScrollPane.setOpaque(true);
		ListScrollPane.setToolTipText(tyFuncDataBundle.getString("ListScrollPane_toolTipText").length() != 0 ? tyFuncDataBundle.getString("ListScrollPane_toolTipText") : null);
    getContentPane().add(ListScrollPane);
    ListScrollPane.setBounds(44,130,350,180);
    List.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		List.setToolTipText(tyFuncDataBundle.getString("List_toolTipText").length() != 0 ? tyFuncDataBundle.getString("List_toolTipText") : null);
    ListScrollPane.getViewport().add(List);
    List.setBounds(0,0,347,177);
		JMenuBar1.setToolTipText(tyFuncDataBundle.getString("JMenuBar1_toolTipText").length() != 0 ? tyFuncDataBundle.getString("JMenuBar1_toolTipText") : null);

    //}}

		Msg.setBorder(new javax.swing.border.EtchedBorder());
    

    //{{INIT_MENUS
    //}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    
    SymAction lSymAction = new SymAction();
    exitItem.addActionListener(lSymAction);
    Help.addActionListener(lSymAction);
    about.addActionListener(lSymAction);
    RefreshButton.addActionListener(lSymAction);
    //}}
  }
    public TyFuncData(TymeacInterface TyI)
    {
			this();
    	Ti = TyI;

    	try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } 
      catch (Exception e) { 
      }		
    }
    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     */
  public TyFuncData(String sTitle)
  {
    this();
    setTitle(sTitle);
  }
   void about_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    about_actionPerformed_Interaction1(event);
  }
  void about_actionPerformed_Interaction1(java.awt.event.ActionEvent event) { 
  
    try {
      // TymeacAbout Create with owner and show as modal
      {
        TyAbout TyAbout1 = new TyAbout(this);
        TyAbout1.setModal(true);
        TyAbout1.setVisible(true);
      }
    } catch (Exception e) {
    }
  }
    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
  public void addNotify()
  {
    // Record the size of the window prior to calling parents addNotify.
    Dimension size = getSize();
    
    super.addNotify();
    
    if (frameSizeAdjusted)
      return;
    frameSizeAdjusted = true;
    
    // Adjust size of frame according to the insets and menu bar
    javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
    int menuBarHeight = 0;
    if (menuBar != null)
        menuBarHeight = menuBar.getPreferredSize().height;
    Insets insets = getInsets();
    setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
  }
  //{{DECLARE_MENUS
	//}}

  void exitApplication()
  {    
    this.setVisible(false);    // hide the Frame
    this.dispose();            // free the system resources
		if  (Ti == null) {
    	System.exit(0);            // close the application 
		}    
  }
  void exitItem_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    exitItem_actionPerformed_Interaction1(event);
  }
  void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
  void Help_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    Help_actionPerformed_Interaction1(event);
  }
  void Help_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    
    TyHelp th = new TyHelp();

    th.putOut(tyFuncDataBundle.getString("th_putOut"));
    
  }
  /**
   * The entry point for this application.
   * Sets the Look and Feel to the System Look and Feel.
   * Creates a new JFrame1 and makes it visible.
   */
  static public void main(String args[])
  {
    try {
        // Add the following code if you want the Look and Feel
        // to be set to the Look and Feel of the native system.
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
                
      //Create a new instance of our application's frame, and make it visible.
      (new TyFuncData()).setVisible(true);
    } 
    catch (Throwable t) {

      System.out.println(t.getMessage());

      //      t.printStackTrace();
      //Ensure the application exits with an error condition.
      System.exit(1);
    }
  }
  void RefreshButton_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    RefreshButton_actionPerformed_Interaction1(event);
  }
  void RefreshButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
  {
    
    try {    
      // When not here
      if  (TyFuncDataBean21 == null) {

          // When internal
          if  (Ti != null) {

              // get the obj
              TyFuncDataBean21 = new TyFuncDataBean2(Ti);
          }
          else {
            // get the obj
            TyFuncDataBean21 = new TyFuncDataBean2();

          } // endif
      } // endif

      // function
    TyFuncDataBean21.refreshButton(FuncText, List);
        
    // the result of this:
    switch (TyFuncDataBean21.getRefResult()) {
                
      case 0: Msg.setText(tyFuncDataBundle.getString("case_0__Msg_text"));
                break;                    
      
      case 1: Msg.setText(tyFuncDataBundle.getString("case_1__Msg_text"));
                break;                    
                        
      case 2: Msg.setText(tyFuncDataBundle.getString("case_2__Msg_text"));
                break;
                  
      case 3: Msg.setText(tyFuncDataBundle.getString("case_3__Msg_text")); 
                break;
      
    } // end-switch       
    
    } catch (java.lang.Exception e) {}
       
  }
  void TyFuncData_windowClosing(java.awt.event.WindowEvent event)
  {
    // to do: code goes here.
       
    TyFuncData_windowClosing_Interaction1(event);
  }
  void TyFuncData_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
  
}
