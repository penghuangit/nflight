package com.tymeac.client.jframe;

/* 
 * Copyright (c) 1998 - 2008 Cooperative Software Systems, Inc. 
 *
 * The contents of this file are subject to the Common Public License   
 * ("License"). You may not use this file except in compliance with
 * the License. A copy of the License is part of this distribution and
 * is also available at:
 * http://www.opensource.org/licenses/cpl.php
 */

import java.awt.*;
import javax.swing.*;
import com.tymeac.base.*;

/**
 * The Wait Lists display frame.
 */
public class TyWlData extends javax.swing.JFrame
{
  private static final long serialVersionUID = 1L;

  // Used by addNotify
  boolean frameSizeAdjusted = false;

  //{{DECLARE_CONTROLS
	javax.swing.JTextField QueText = new javax.swing.JTextField();
	javax.swing.JLabel QueLabel = new javax.swing.JLabel();
	javax.swing.JButton RefreshButton = new javax.swing.JButton();
	javax.swing.JLabel Msg = new javax.swing.JLabel();
  
	javax.swing.JScrollPane UsePane = new javax.swing.JScrollPane();
	javax.swing.JList UseList = new javax.swing.JList();
  
	javax.swing.JScrollPane UsedPanel = new javax.swing.JScrollPane();
  javax.swing.JList UsedList = new javax.swing.JList();
  
  javax.swing.JScrollPane HiUsedPane = new javax.swing.JScrollPane();
  javax.swing.JList HiUsedList = new javax.swing.JList();
  
	javax.swing.JScrollPane ResetPane = new javax.swing.JScrollPane();
	javax.swing.JList ResetList = new javax.swing.JList();
  
	javax.swing.JScrollPane PriPane = new javax.swing.JScrollPane();
	javax.swing.JList PriList = new javax.swing.JList();
  
	javax.swing.JScrollPane SecPane = new javax.swing.JScrollPane();
	javax.swing.JList SecList = new javax.swing.JList();
  
	javax.swing.JLabel UseLabel = new javax.swing.JLabel();
	javax.swing.JLabel InLabel = new javax.swing.JLabel();
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem Help = new javax.swing.JMenuItem();
	javax.swing.JMenuItem about = new javax.swing.JMenuItem();
	//}}

	TyWlDataBean2 TyWlDataBean21 = null;
	TymeacInterface Ti = null;

  class SymWindow extends java.awt.event.WindowAdapter
  {
    public void windowClosing(java.awt.event.WindowEvent event)
    {
      Object object = event.getSource();
      if (object == TyWlData.this)
        TyWlData_windowClosing(event);
    }
  }

  class SymAction implements java.awt.event.ActionListener
  {
    public void actionPerformed(java.awt.event.ActionEvent event)
    { 
      Object object = event.getSource();
      if (object == exitItem)
        exitItem_actionPerformed(event);
      else if (object == Help)
        Help_actionPerformed(event);
      else  if (object == about)
        about_actionPerformed(event);
			else if (object == RefreshButton)
				RefreshButton_actionPerformed(event);         
      
    }
  }

	static java.util.ResourceBundle tyWlDataBundle = java.util.ResourceBundle.getBundle("com.tymeac.client.jframe.TyWlDataBundle");
  public TyWlData()
  {
    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.
    //{{INIT_CONTROLS
    setJMenuBar(JMenuBar1);
    setTitle(tyWlDataBundle.getString("TyWlData_title"));
    setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    getContentPane().setLayout(null);
    setSize(625,425); // (525, 425)
		setVisible(false);
		QueText.setText(tyWlDataBundle.getString("QueText_text"));
    //$$ JMenuBar1.move(144,420);
    fileMenu.setText(tyWlDataBundle.getString("fileMenu_text"));
    fileMenu.setActionCommand(tyWlDataBundle.getString("fileMenu_actionCommand"));
		fileMenu.setToolTipText(tyWlDataBundle.getString("fileMenu_toolTipText").length() != 0 ? tyWlDataBundle.getString("fileMenu_toolTipText") : null);
    fileMenu.setMnemonic((int)'F');
    JMenuBar1.add(fileMenu);
    
    fileMenu.add(JSeparator1);
    
    exitItem.setText(tyWlDataBundle.getString("exitItem_text"));
    exitItem.setActionCommand(tyWlDataBundle.getString("exitItem_actionCommand"));
		exitItem.setToolTipText(tyWlDataBundle.getString("exitItem_toolTipText").length() != 0 ? tyWlDataBundle.getString("exitItem_toolTipText") : null);
    exitItem.setMnemonic((int)'X');
    fileMenu.add(exitItem);
		JSeparator1.setToolTipText(tyWlDataBundle.getString("JSeparator1_toolTipText").length() != 0 ? tyWlDataBundle.getString("JSeparator1_toolTipText") : null);
    
    helpMenu.setText(tyWlDataBundle.getString("helpMenu_text"));
    helpMenu.setActionCommand(tyWlDataBundle.getString("helpMenu_actionCommand"));
		helpMenu.setToolTipText(tyWlDataBundle.getString("helpMenu_toolTipText").length() != 0 ? tyWlDataBundle.getString("helpMenu_toolTipText") : null);
    helpMenu.setMnemonic((int)'H');
    JMenuBar1.add(helpMenu);
    
    fileMenu.add(JSeparator1);
       
    Help.setText(tyWlDataBundle.getString("Help_text"));
    Help.setActionCommand(tyWlDataBundle.getString("Help_actionCommand"));
		Help.setToolTipText(tyWlDataBundle.getString("Help_toolTipText").length() != 0 ? tyWlDataBundle.getString("Help_toolTipText") : null);
    Help.setMnemonic((int)'D');
    helpMenu.add(Help);
    
    fileMenu.add(JSeparator1);
    
    about.setText(tyWlDataBundle.getString("about_text"));
    about.setActionCommand(tyWlDataBundle.getString("about_actionCommand"));
		about.setToolTipText(tyWlDataBundle.getString("about_toolTipText").length() != 0 ? tyWlDataBundle.getString("about_toolTipText") : null);
    about.setMnemonic((int)'A');
    helpMenu.add(about); 
		QueText.setToolTipText(tyWlDataBundle.getString("QueText_toolTipText").length() != 0 ? tyWlDataBundle.getString("QueText_toolTipText") : null);
		getContentPane().add(QueText);
		QueText.setBounds(24,24,200,30);
		QueLabel.setText(tyWlDataBundle.getString("QueLabel_text"));
		QueLabel.setToolTipText(tyWlDataBundle.getString("QueLabel_toolTipText").length() != 0 ? tyWlDataBundle.getString("QueLabel_toolTipText") : null);
		getContentPane().add(QueLabel);
		QueLabel.setBounds(24,56,110,20);
		RefreshButton.setText(tyWlDataBundle.getString("RefreshButton_text"));
		RefreshButton.setActionCommand(tyWlDataBundle.getString("RefreshButton_actionCommand"));
		RefreshButton.setToolTipText(tyWlDataBundle.getString("RefreshButton_toolTipText").length() != 0 ? tyWlDataBundle.getString("RefreshButton_toolTipText") : null);
		getContentPane().add(RefreshButton);
		RefreshButton.setBounds(348,24,80,30);
		Msg.setText(tyWlDataBundle.getString("Msg_text"));
		Msg.setToolTipText(tyWlDataBundle.getString("Msg_toolTipText").length() != 0 ? tyWlDataBundle.getString("Msg_toolTipText") : null);
		getContentPane().add(Msg);
		Msg.setForeground(new java.awt.Color(128,0,0));
		Msg.setBounds(20,385,480,30);
    
		UsePane.setOpaque(true);
		UsePane.setToolTipText(tyWlDataBundle.getString("UsePane_toolTipText").length() != 0 ? tyWlDataBundle.getString("UsePane_toolTipText") : null);
		getContentPane().add(UsePane);
		UsePane.setBounds(41,132,70,228);
		UseList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		UseList.setToolTipText(tyWlDataBundle.getString("UseList_toolTipText").length() != 0 ? tyWlDataBundle.getString("UseList_toolTipText") : null);
		UsePane.getViewport().add(UseList);
		UseList.setBounds(0,0,67,225);
    
		UsedPanel.setOpaque(true);
		UsedPanel.setToolTipText(tyWlDataBundle.getString("UsedPanel_toolTipText").length() != 0 ? tyWlDataBundle.getString("UsedPanel_toolTipText") : null);
		getContentPane().add(UsedPanel);
		UsedPanel.setBounds(134,132,70,228);
		UsedList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		UsedList.setToolTipText(tyWlDataBundle.getString("UsedList_toolTipText").length() != 0 ? tyWlDataBundle.getString("UsedList_toolTipText") : null);
		UsedPanel.getViewport().add(UsedList);
		UsedList.setBounds(0,0,67,225);
// hiused    
    HiUsedPane.setOpaque(true);
    HiUsedPane.setToolTipText(tyWlDataBundle.getString("HiUsedPanel_toolTipText").length() != 0 ? tyWlDataBundle.getString("UsedPanel_toolTipText") : null);
    getContentPane().add(HiUsedPane);
    HiUsedPane.setBounds(227,132,70,228);
    HiUsedList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    HiUsedList.setToolTipText(tyWlDataBundle.getString("UsedList_toolTipText").length() != 0 ? tyWlDataBundle.getString("UsedList_toolTipText") : null);
    HiUsedPane.getViewport().add(HiUsedList);
    HiUsedList.setBounds(0,0,67,225);    
    
		ResetPane.setOpaque(true);
		ResetPane.setToolTipText(tyWlDataBundle.getString("ResetPane_toolTipText").length() != 0 ? tyWlDataBundle.getString("ResetPane_toolTipText") : null);
		getContentPane().add(ResetPane);
		ResetPane.setBounds(320,132,70,228);
		ResetList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		ResetList.setToolTipText(tyWlDataBundle.getString("ResetList_toolTipText").length() != 0 ? tyWlDataBundle.getString("ResetList_toolTipText") : null);
		ResetPane.getViewport().add(ResetList);
		ResetList.setBounds(0,0,67,225);
    
		PriPane.setOpaque(true);
		PriPane.setToolTipText(tyWlDataBundle.getString("PriPane_toolTipText").length() != 0 ? tyWlDataBundle.getString("PriPane_toolTipText") : null);
		getContentPane().add(PriPane);
		PriPane.setBounds(413,132,70,228);
		PriList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		PriList.setToolTipText(tyWlDataBundle.getString("PriList_toolTipText").length() != 0 ? tyWlDataBundle.getString("PriList_toolTipText") : null);
		PriPane.getViewport().add(PriList);
		PriList.setBounds(0,0,67,225);
    
		SecPane.setOpaque(true);
		SecPane.setToolTipText(tyWlDataBundle.getString("SecPane_toolTipText").length() != 0 ? tyWlDataBundle.getString("SecPane_toolTipText") : null);
		getContentPane().add(SecPane);
		SecPane.setBounds(506,132,70,228);
		SecList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		SecList.setToolTipText(tyWlDataBundle.getString("SecList_toolTipText").length() != 0 ? tyWlDataBundle.getString("SecList_toolTipText") : null);
		SecPane.getViewport().add(SecList);
		SecList.setBounds(0,0,67,225);
    
		UseLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		UseLabel.setText(tyWlDataBundle.getString("UseLabel_text"));
		UseLabel.setToolTipText(tyWlDataBundle.getString("UseLabel_toolTipText").length() != 0 ? tyWlDataBundle.getString("UseLabel_toolTipText") : null);
		getContentPane().add(UseLabel);
		UseLabel.setBounds(41,115,540,15); // (41,115,440,15)
		InLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		InLabel.setText(tyWlDataBundle.getString("InLabel_text"));
		InLabel.setToolTipText(tyWlDataBundle.getString("InLabel_toolTipText").length() != 0 ? tyWlDataBundle.getString("InLabel_toolTipText") : null);
		getContentPane().add(InLabel);
		InLabel.setBounds(41,101,540,15);
		JMenuBar1.setToolTipText(tyWlDataBundle.getString("JMenuBar1_toolTipText").length() != 0 ? tyWlDataBundle.getString("JMenuBar1_toolTipText") : null);

    //}}

		Msg.setBorder(new javax.swing.border.EtchedBorder());

    //{{INIT_MENUS
    //}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    
    SymAction lSymAction = new SymAction();
    exitItem.addActionListener(lSymAction);
    Help.addActionListener(lSymAction);
    about.addActionListener(lSymAction);
		RefreshButton.addActionListener(lSymAction);
		//}}
  }
    public TyWlData(TymeacInterface TyI)
    {
			this();
    	Ti = TyI;

    	try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
    }
    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     */
  public TyWlData(String sTitle)
  {
    this();
    setTitle(sTitle);
  }
   void about_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    about_actionPerformed_Interaction1(event);
  }
  void about_actionPerformed_Interaction1(java.awt.event.ActionEvent event) { 
  
    try {
      // TymeacAbout Create with owner and show as modal
      {
        TyAbout TyAbout1 = new TyAbout(this);
        TyAbout1.setModal(true);
        TyAbout1.setVisible(true);
      }
    } catch (Exception e) {
    }
  }
    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
  public void addNotify()
  {
    // Record the size of the window prior to calling parents addNotify.
    Dimension size = getSize();
    
    super.addNotify();
    
    if (frameSizeAdjusted)
      return;
    frameSizeAdjusted = true;
    
    // Adjust size of frame according to the insets and menu bar
    javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
    int menuBarHeight = 0;
    if (menuBar != null)
        menuBarHeight = menuBar.getPreferredSize().height;
    Insets insets = getInsets();
    setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
  }
  //{{DECLARE_MENUS
	//}}

  void exitApplication()
  {    
    this.setVisible(false);    // hide the Frame
    this.dispose();            // free the system resources
		if  (Ti == null) {
    		System.exit(0);  // close the application 
    } // endif
  }
  void exitItem_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    exitItem_actionPerformed_Interaction1(event);
  }
  void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
  void Help_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    Help_actionPerformed_Interaction1(event);
  }
  void Help_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    
    TyHelp th = new TyHelp();

    th.putOut(tyWlDataBundle.getString("th_putOut"));
  }
  /**
   * The entry point for this application.
   * Sets the Look and Feel to the System Look and Feel.
   * Creates a new JFrame1 and makes it visible.
   */
  static public void main(String args[])
  {
    try {
        // Add the following code if you want the Look and Feel
        // to be set to the Look and Feel of the native system.
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
        

      //Create a new instance of our application's frame, and make it visible.
      (new TyWlData()).setVisible(true);
    } 
    catch (Throwable t) {
      t.printStackTrace();
      //Ensure the application exits with an error condition.
      System.exit(1);
    }
  }
	void RefreshButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		RefreshButton_actionPerformed_Interaction1(event);
	}
	void RefreshButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		try {
			// When 1st
			if  (TyWlDataBean21 == null) {

					// When internal
  				if  (Ti != null) {

     					// get the obj
     					TyWlDataBean21 = new TyWlDataBean2(Ti);
  				}
  				else {
    					// get the obj
    					TyWlDataBean21 = new TyWlDataBean2();

  				} // endif
			} // endif

			// must enter a queue
			String que = QueText.getText();

			// When not there
			if  ((que == null) ||
					 (que.length() < 1)) {

				  // msg
					Msg.setText(tyWlDataBundle.getString("Msg_text_1"));

					// ret
					return;

	     } // endif	
    
  		// function
  		TyWlDataBean21.refreshButton(	QueText,
																		UseList,
																		UsedList,
                                    HiUsedList,
																		ResetList,
																		PriList,
																		SecList);
        
  		// the result of this:
  		switch (TyWlDataBean21.getRefResult()) {
                
		      case 0: Msg.setText(tyWlDataBundle.getString("case_0__Msg_text"));
      		         break;                    
          
  				case 1: Msg.setText(tyWlDataBundle.getString("case_1__Msg_text")); 
    		           break;
                
    			case 2: Msg.setText(tyWlDataBundle.getString("case_2__Msg_text")); 
      	          break;
      
    			case 3: Msg.setText(tyWlDataBundle.getString("case_3__Msg_text")); 
          	      break;
                                  
		 } // end-switch   

		} catch (java.lang.Exception e) {
		}
	}
  void TyWlData_windowClosing(java.awt.event.WindowEvent event)
  {
    // to do: code goes here.
       
    TyWlData_windowClosing_Interaction1(event);
  }
  void TyWlData_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
}
