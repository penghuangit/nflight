package com.tymeac.client.jframe;

/* 
 * Copyright (c) 1998 - 2011 Cooperative Software Systems, Inc. 
 *
 * The contents of this file are subject to the Common Public License   
 * ("License"). You may not use this file except in compliance with
 * the License. A copy of the License is part of this distribution and
 * is also available at:
 * http://www.opensource.org/licenses/cpl.php
 */

import java.awt.*;
import javax.swing.*;

import com.tymeac.base.*;

/**
 * The Tymeac Alter Server Options frame.
 */
public class TyAltSvr extends javax.swing.JFrame
{
  private static final long serialVersionUID = 1L;

  // Used by addNotify
  boolean frameSizeAdjusted = false;

  //{{DECLARE_CONTROLS	
  javax.swing.JCheckBox SysExit = new javax.swing.JCheckBox();
  
	javax.swing.JLabel MonLabel = new javax.swing.JLabel();
	javax.swing.JTextField monText = new javax.swing.JTextField();
	
	javax.swing.JLabel ActLabel = new javax.swing.JLabel();
	javax.swing.JTextField actText = new javax.swing.JTextField();
	
	javax.swing.JButton ImportButton = new javax.swing.JButton();
	javax.swing.JButton AlterButton = new javax.swing.JButton();
    
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem Help = new javax.swing.JMenuItem();
	javax.swing.JMenuItem about = new javax.swing.JMenuItem();	//}}

	TyAltSvrBean bean = null;
	TymeacInterface Ti = null;
	
  class SymWindow extends java.awt.event.WindowAdapter
  {
    public void windowClosing(java.awt.event.WindowEvent event)
    {
      Object object = event.getSource();
      if (object == TyAltSvr.this)
        TyUserVariables_windowClosing(event);
    }
  }

  class SymAction implements java.awt.event.ActionListener
  {
    public void actionPerformed(java.awt.event.ActionEvent event)
    { 
      Object object = event.getSource();
      if (object == exitItem)
        exitItem_actionPerformed(event);
      else if (object == Help)
        Help_actionPerformed(event);
      else  if (object == about)
        about_actionPerformed(event);
			else if (object == ImportButton)
				ImportButton_actionPerformed(event);
			else if (object == AlterButton)
				AlterButton_actionPerformed(event);       
      
    }
  }

	class SymListSelection implements javax.swing.event.ListSelectionListener
	{
		public void valueChanged(javax.swing.event.ListSelectionEvent event)
		{
			Object object = event.getSource();
		}
	}

	static java.util.ResourceBundle TyAltSvrBundle = java.util.ResourceBundle.getBundle("com.tymeac.client.jframe.TyAltSvrBundle");
  public TyAltSvr()
  {
    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.
    //{{INIT_CONTROLS
		setJMenuBar(JMenuBar1);
		setTitle(TyAltSvrBundle.getString("TyAltSvr_title"));
		setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
		getContentPane().setLayout(null);
		setSize(350,350); //650,320
		setVisible(false);    
		
		MonLabel.setText(TyAltSvrBundle.getString("MonLabel_text"));
		MonLabel.setToolTipText(TyAltSvrBundle.getString("MonLabel_toolTipText").length() != 0 ? TyAltSvrBundle.getString("MonLabel_toolTipText") : null);
		MonLabel.setBounds(82,105,288,40);
		getContentPane().add(MonLabel);
				
		monText.setText(TyAltSvrBundle.getString("monText_text"));
		monText.setToolTipText(TyAltSvrBundle.getString("monText_toolTipText").length() != 0 ? TyAltSvrBundle.getString("monText_toolTipText") : null);
		monText.setBounds(46,115,30,24);
		getContentPane().add(monText);
		
		actText.setText(TyAltSvrBundle.getString("actText_text"));
		actText.setToolTipText(TyAltSvrBundle.getString("actText_toolTipText").length() != 0 ? TyAltSvrBundle.getString("actText_toolTipText") : null);
		actText.setBounds(46,190,30,24);
		getContentPane().add(actText);
		
		ActLabel.setText(TyAltSvrBundle.getString("ActLabel_text"));
		ActLabel.setToolTipText(TyAltSvrBundle.getString("ActLabel_toolTipText").length() != 0 ? TyAltSvrBundle.getString("ActLabel_toolTipText") : null);
		ActLabel.setBounds(82,180,288,40);
		getContentPane().add(ActLabel);
    
    
		ImportButton.setText(TyAltSvrBundle.getString("ImportButton_text"));
		ImportButton.setActionCommand(TyAltSvrBundle.getString("ImportButton_actionCommand"));
		ImportButton.setToolTipText(TyAltSvrBundle.getString("ImportButton_toolTipText").length() != 0 ? TyAltSvrBundle.getString("ImportButton_toolTipText") : null);		
		ImportButton.setBounds(46,260,75,25); // (130,333,75,25)
		getContentPane().add(ImportButton);
		
		AlterButton.setText(TyAltSvrBundle.getString("AlterButton_text"));
		AlterButton.setActionCommand(TyAltSvrBundle.getString("AlterButton_actionCommand"));
		AlterButton.setToolTipText(TyAltSvrBundle.getString("AlterButton_toolTipText").length() != 0 ? TyAltSvrBundle.getString("AlterButton_toolTipText") : null);
		AlterButton.setBounds(170,260,75,25);
		getContentPane().add(AlterButton);
		
		SysExit.setText(TyAltSvrBundle.getString("SysExit_text"));
		SysExit.setActionCommand(TyAltSvrBundle.getString("SysExit_actionCommand"));
		SysExit.setSelected(true);
		SysExit.setToolTipText(TyAltSvrBundle.getString("SysExit_toolTipText").length() != 0 ? TyAltSvrBundle.getString("SysExit_toolTipText") : null);
		SysExit.setFont(new Font("Dialog", Font.PLAIN, 12));
		SysExit.setBounds(55,50,200,40);
		getContentPane().add(SysExit);
		
		JMenuBar1.setToolTipText(TyAltSvrBundle.getString("JMenuBar1_toolTipText").length() != 0 ? TyAltSvrBundle.getString("JMenuBar1_toolTipText") : null);
		//$$ JMenuBar1.move(156,432);
		fileMenu.setText(TyAltSvrBundle.getString("fileMenu_text"));
		fileMenu.setActionCommand(TyAltSvrBundle.getString("fileMenu_actionCommand"));
		fileMenu.setToolTipText(TyAltSvrBundle.getString("fileMenu_toolTipText").length() != 0 ? TyAltSvrBundle.getString("fileMenu_toolTipText") : null);
		fileMenu.setMnemonic((int)'F');
		JMenuBar1.add(fileMenu);
		exitItem.setText(TyAltSvrBundle.getString("exitItem_text"));
		exitItem.setActionCommand(TyAltSvrBundle.getString("exitItem_actionCommand"));
		exitItem.setToolTipText(TyAltSvrBundle.getString("exitItem_toolTipText").length() != 0 ? TyAltSvrBundle.getString("exitItem_toolTipText") : null);
		exitItem.setMnemonic((int)'X');
		fileMenu.add(exitItem);
		JSeparator1.setToolTipText(TyAltSvrBundle.getString("JSeparator1_toolTipText").length() != 0 ? TyAltSvrBundle.getString("JSeparator1_toolTipText") : null);
		fileMenu.add(JSeparator1);
		helpMenu.setText(TyAltSvrBundle.getString("helpMenu_text"));
		helpMenu.setActionCommand(TyAltSvrBundle.getString("helpMenu_actionCommand"));
		helpMenu.setToolTipText(TyAltSvrBundle.getString("helpMenu_toolTipText").length() != 0 ? TyAltSvrBundle.getString("helpMenu_toolTipText") : null);
		helpMenu.setMnemonic((int)'H');
		JMenuBar1.add(helpMenu);
		Help.setText(TyAltSvrBundle.getString("Help_text"));
		Help.setActionCommand(TyAltSvrBundle.getString("Help_actionCommand"));
		Help.setToolTipText(TyAltSvrBundle.getString("Help_toolTipText").length() != 0 ? TyAltSvrBundle.getString("Help_toolTipText") : null);
		Help.setMnemonic((int)'D');
		helpMenu.add(Help);
		about.setText(TyAltSvrBundle.getString("about_text"));
		about.setActionCommand(TyAltSvrBundle.getString("about_actionCommand"));
		about.setToolTipText(TyAltSvrBundle.getString("about_toolTipText").length() != 0 ? TyAltSvrBundle.getString("about_toolTipText") : null);
		about.setMnemonic((int)'A');
		helpMenu.add(about);
		//}}

    //{{INIT_MENUS
		//}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    
    SymAction lSymAction = new SymAction();
    exitItem.addActionListener(lSymAction);
    Help.addActionListener(lSymAction);
    about.addActionListener(lSymAction);
		ImportButton.addActionListener(lSymAction);
		AlterButton.addActionListener(lSymAction);
		
		//}}
  }
    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     */
  public TyAltSvr(String sTitle)
  {
    this();
    setTitle(sTitle);
  }
  
  /**
   * using the internal server
   * @param TyI
   */
   public TyAltSvr(TymeacInterface TyI)
    {
      this();
      Ti = TyI;

      try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } 
      catch (Exception e) { 
      }   
    }
   void about_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    about_actionPerformed_Interaction1(event);

  } // end-method
  void about_actionPerformed_Interaction1(java.awt.event.ActionEvent event) { 
  
    try {
      // TymeacAbout Create with owner and show as modal
      {
        TyAbout TyAbout1 = new TyAbout(this);
        TyAbout1.setModal(true);
        TyAbout1.setVisible(true);
      }
    } catch (Exception e) {
    }
  }
    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
  public void addNotify()
  {
    // Record the size of the window prior to calling parents addNotify.
    Dimension size = getSize();
    
    super.addNotify();
    
    if (frameSizeAdjusted)
      return;
    frameSizeAdjusted = true;
    
    // Adjust size of frame according to the insets and menu bar
    javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
    int menuBarHeight = 0;
    if (menuBar != null)
        menuBarHeight = menuBar.getPreferredSize().height;
    Insets insets = getInsets();
    setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
  }
  //{{DECLARE_MENUS
	//}}

  void exitApplication()
  {    
    this.setVisible(false);    // hide the Frame
    this.dispose();            // free the system resources
    if  (Ti == null) {
      System.exit(0);            // close the application 
    }    
    
  }
  void exitItem_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    exitItem_actionPerformed_Interaction1(event);
  }
  void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
	void AlterButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.			 
		AlterButton_actionPerformed_Interaction1(event);	

		// When 1st, get a new obj
		if  (bean == null) {		  		
		
		    // When internal
        if  (Ti != null) {

            // get the obj
            bean = new TyAltSvrBean(Ti);
        }
        else {
          // get the obj
          bean = new TyAltSvrBean();

        } // endif
		} // endif		
		
		bean.alterButton(	monText, actText, SysExit);
		
		switch (bean.getCallResult()) {
		
		  case 0: return;
		  case 1: System.out.println("Communication failure");
		          return;
		  case 2: System.out.println("Invalid Monitor Interval");
              return;
		  case 3: System.out.println("Invalid Inactivation minutes");
              return;
      default: return;
		
		} // end-switch
														
	}
	void AlterButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		
	}
  void Help_actionPerformed(java.awt.event.ActionEvent event)
  {
    // to do: code goes here.
       
    Help_actionPerformed_Interaction1(event);
  }
  void Help_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
    
    TyHelp th = new TyHelp();

    th.putOut(TyAltSvrBundle.getString("th_putOut"));
    
  }
	void ImportButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		ImportButton_actionPerformed_Interaction1(event);		
	
		// When 1st, get a new obj
    if  (bean == null) {          
    
        // When internal
        if  (Ti != null) {

            // get the obj
            bean = new TyAltSvrBean(Ti);
        }
        else {
          // get the obj
          bean = new TyAltSvrBean();

        } // endif
    } // endif    

		// go get the data
		bean.importButton(monText, actText, SysExit);		
		
		switch (bean.getCallResult()) {
    
      case 0: return;
      case 1: System.out.println("Communication failure");
              return;      
      default: return;
		}

	}
	void ImportButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		
	}
  /**
   * The entry point for this application.
   * Sets the Look and Feel to the System Look and Feel.
   * Creates a new JFrame1 and makes it visible.
   */
  static public void main(String args[])
  {
    try {
        // Add the following code if you want the Look and Feel
        // to be set to the Look and Feel of the native system.
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } 
        catch (Exception e) { 
        }
        

      //Create a new instance of our application's frame, and make it visible.
      (new TyAltSvr()).setVisible(true);
    } 
    catch (Throwable t) {

			System.out.println(t.getMessage());
      // t.printStackTrace();
      //Ensure the application exits with an error condition.
      System.exit(1);
    }
  }
	
	void TyUserVariables_windowClosing(java.awt.event.WindowEvent event)
  {
    // to do: code goes here.
       
    TyUserVariables_windowClosing_Interaction1(event);
  }
  void TyUserVariables_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
    try {
      this.exitApplication();
    } catch (Exception e) {
    }
  }
}
